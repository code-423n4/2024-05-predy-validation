status,issue,title,validator comment 1,validator comment 2,validator comment 3,root cause 1,root cause 2,root cause 3,merged root cause,primary finding,proposed root cause group,
Satisfactory,validation-507,"Malicious user can create positions that can never be liquidated, breaking protocol invariant",Unbounded loop DoS in removeItem,OOG that's beyond input control,O(N) remove,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L402-L406,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L9C5-L31C6",https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L143-L144,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L20-L31,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L9-L31,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L402-L406,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L143-L144",validation-472,"DUPE-ArrayLib-001,DUPE-GammaTradeMarket-002,DUPE-GammaTradeMarket-003",DUPE-GammaTradeMarket-003
Satisfactory,validation-257,`Filler` is incorrectly tasked.,Incorrect access control,Filler is trusted,filler or owner,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L136C5-L140C10,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L140-L142,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L140-L142,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L136C5-L140C10,validation-305,DUPE-BaseMarketUpgradable-001,
Satisfactory,validation-543,Filler can update `settlementWhitelist` through basemarketupgradeable.sol.,Incorrect access control,Filler is trusted,filler or owner,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L136C5-L140C10,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L140,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L140,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L136C5-L140C10,validation-305,DUPE-BaseMarketUpgradable-001,
Satisfactory,validation-135,`validateStopPrice()` is potentially flawed by wrong `value` parameter,Incorrect passed argument,Insufficient proof (devoid of concrete example),decay2,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L152,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/orders/DecayLib.sol#L13",https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L147-L153,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/orders/DecayLib.sol#L16-L37,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L147-L153,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/orders/DecayLib.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/orders/DecayLib.sol#L16-L37",validation-135,"DUPE-DecayLib-001,DUPE-DecayLib-002,DUPE-PerpMarketLib-003",DUPE-PerpMarketLib-003
Satisfactory,validation-210,Incorrect  data is saved as `userPosition`  during trade execution,Incorrect passed argument vaultId instead of positionId,Insufficient proof to elicit the flaws,vaultId or positionId,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L186,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L185-L187,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L185-L187,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L185-L187,validation-210,DUPE-GammaTradeMarket-001,
Satisfactory,validation-287,Liquidation may revert when the account is blacklisted,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,validation-625,DUPE-LiquidationLogic-001,
Satisfactory,validation-80,Unable to perform liquidation if vault `recipient` is  blacklisted by `quotePool.token`,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,validation-625,DUPE-LiquidationLogic-001,
Satisfactory,validation-218,Inflexible Twap  `_ORACLE_PERIOD` leads to inadequate pricing of assets,Lack of slippage protection. Seems QA as it is a feature request,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,"twap window hardecode 30 min, should be adjustable",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L11,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L20-L22,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L129-L149,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L20-L22,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L11,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L129-L149",findings-31,"DUPE-LiquidationLogic-002,DUPE-UniHelper-003,DUPE-UniHelper-004",DUPE-UniHelper-004
Satisfactory,validation-345,UniV3 Oracle Manipulation on L2s,Uniswap is an unsafe oracle in L2s,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,"twap window hardecode 30 min, should be adjustable",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L129-L149,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L129-L149,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35",validation-345,"DUPE-LiquidationLogic-002,DUPE-UniHelper-001",
Satisfactory,validation-8,Use of `slot0()` to fetch prices can lead to price manipulation,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L206,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L206",validation-4,"DUPE-Perp-001,DUPE-UniHelper-002",
Satisfactory,validation-206,Missing slippage control when adding/removing liquidity,,Non-frontrunning slippage,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L268-L270,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L268-L270",findings-25,"DUPE-Perp-002,DUPE-PredyPool-004,DUPE-PredyPool-005",DUPE-PredyPool-005
Satisfactory,validation-530,Improper Validation in PerpMarketV1: Reverting Mechanism Fails to revert an Invalid Trades,Invalid. Logic clause is correct,Conditional leaks,"&& ||",,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L213-L215,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100-L101,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100-L101,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L213-L215",validation-280,"DUPE-PerpMarketLib-001,DUPE-PerpMarketV1-001",
Satisfactory,validation-223,Incorrect Limit Stop Order Validation.,Incorrect logic clause when validating orders,Conditional leaks,"&& ||",https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100C15-L101C104,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L97-L104,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100-L101,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100C15-L101C104,validation-280,DUPE-PerpMarketLib-001,
Satisfactory,validation-509,`PerpMarketLib::validateStopPrice` calculates the ratio of `oraclePrice` and `stopPrice` incorrectly,Ratio of oracle price and stop price incorrectly computed,Insufficient proof (devoid of concrete example),tolerance price1 == price2,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L179C8-L181C10,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L213-L215,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L178-L186,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L178-L186,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L213-L215",validation-524,"DUPE-PerpMarketLib-002,DUPE-PerpMarketV1-001",
Satisfactory,validation-6,No Protection of Uninitialized Implementation Contracts From Attacker,"Implementation contracts can be initialized. Seems QA, this can be solved in deployment.",L-6 from Analyzer,uninitialized Impl,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,validation-249,DUPE-PredyPool-001,
Satisfactory,validation-406,`updateFeeRatio()` does not collect previous fees before setting a new `feeRatio`,Interest rate is not updated before changing parameters,Missing accrued fee calculation prior to fee update,update fee first,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L147-L149,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L147-L149,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L147-L149,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139",findings-12,"DUPE-PredyPool-002,DUPE-PredyPool-003",
Satisfactory,validation-614,Lack of slippage protection in supply function leads staker receives less shares than expected,Lack of slippage protection. Seems QA as it is a feature request,Non-frontrunning slippage,slippage supply/withdraw,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L46-L55,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222","https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L46-L55",findings-25,"DUPE-PredyPool-004,DUPE-PredyPool-005,DUPE-SupplyLogic-001",DUPE-SupplyLogic-001
Satisfactory,validation-620,Missing slippage check in supply and withdraw function in PredyPool,Lack of slippage protection. Seems QA as it is a feature request,Non-frontrunning slippage,slippage supply/withdraw,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237",https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222","https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222",findings-25,"DUPE-PredyPool-004,DUPE-PredyPool-005",
Satisfactory,validation-678,Use of Potentially Stale Price Data from Pyth Oracle,Invalid.,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45",findings-31,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",
Satisfactory,validation-248,Potential Use of Stale Prices in SqrtPrice Calculation in PriceFeed.sol,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46-L52,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46-L52,validation-244,DUPE-PriceFeed-001,
Satisfactory,validation-289,Chainlink stale price,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,
Satisfactory,validation-291,Chainlink FlashCrash Price,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,oracle minAnswer,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-642,DUPE-PriceFeed-001,
Satisfactory,validation-354,UniV3 Oracle unsafe on L2s in event of Sequencer downtime,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-466,"DUPE-PriceFeed-001,DUPE-UniHelper-001",
Satisfactory,validation-460,Chainlink’s latestRoundData might return stale or incorrect results,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,
Satisfactory,validation-50,No check for active L2 Sequencer,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-466,DUPE-PriceFeed-001,
Satisfactory,validation-51,Missing check for the max/min price in `getSqrtPrice()`,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,oracle minAnswer,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-642,DUPE-PriceFeed-001,
Satisfactory,validation-644,Chainlink's `latestRoundData` may return a stale or incorrect result,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,
Satisfactory,validation-65,Inadequate price validation in `getSqrtPrice()` results in usage of stale prices.,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,
Satisfactory,validation-662,Missing check for sequencer downtime in PriceFeed contract,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-466,DUPE-PriceFeed-001,
Satisfactory,validation-679,No Sequencer Status Check in Price Feed Contract on Arbitrum L2,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-466,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",
Satisfactory,validation-683,Lack of Chainlink Price Range Validation in PriceFeed Contract,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,oracle minAnswer,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-642,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",
Satisfactory,validation-330,Hardcoded `VALID_TIME_PERIOD` is not suitable in all cases.,VALID_TIME_PERIOD should depend on the chain,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,twap window,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L35,findings-31,DUPE-PriceFeed-002,
Satisfactory,validation-156,Incorrect Rounding in `calculateUsableTick` where negative tick values are rounded down instead of to the nearest multiple of `tickSpacing`.,Invalid,Incorrect rounding of negative ticks,range size rounding,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L109-L121,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L109-L121,validation-285,DUPE-Reallocation-001,
Satisfactory,validation-508,Using `block.timestamp` as deadline is dangerous,block.timestamp is an invalid deadline,Infeasible in POS,swap deadline,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L113-L120,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L113-L120",validation-87,"DUPE-SettlementCallbackLib-001,DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001
Satisfactory,validation-269,Incorrect `prices` would be returned for `negative ticks`,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,negative tick,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L68-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,validation-285,DUPE-UniHelper-001,
Satisfactory,validation-442,`callUniswapObserve` will show incorrect price for negative ticks because it does not round up for them,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,negative tick,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35-L74,validation-285,DUPE-UniHelper-001,
Satisfactory,validation-298,Use of slot 0 is easy to manipulate,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L14,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,validation-4,DUPE-UniHelper-002,
Satisfactory,validation-456,Use of slot0 can lead to price manipulations,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L12-L14,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L12-L15,validation-4,DUPE-UniHelper-002,
Satisfactory,validation-500,"Multiple instances of usage of `slot0` to calculate square root price, which is easily manipulatable",slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,validation-4,DUPE-UniHelper-002,
Satisfactory,validation-343,insufficient slippage specification in uniswap,block.timestamp is an invalid deadline,Infeasible in POS,swap deadline,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L34,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",
Satisfactory,validation-441,Missing deadline parameter in `swapExactIn` and `swapExactOut` functions in `UniswapSettlement.sol` allowing outdated slippage and allowing pending transactions to be executed unexpectedly,block.timestamp is an invalid deadline,Infeasible in POS,swap deadline,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",
Satisfactory,validation-513,No `deadline` parameter on `swapExactIn` and `swapExactOut` can lead to less faourable swaps.,block.timestamp is an invalid deadline,Inadequate elaboration,swap deadline,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001
Satisfactory,validation-64,Unset `deadline` allows for malicious swap executions.,block.timestamp is an invalid deadline,Infeasible in POS,swap deadline,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L34,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",
Unsatisfactory,validation-100,Incorrect Fee Calculation for Short Positions.,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PerpFee.sol#L77-L84,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PerpFee.sol#L77-L84,,,
Unsatisfactory,validation-101,Incorrect Update of `lastRebalanceTotalSquartAmount` Leading to Inaccurate Rebalancing Interest Calculations.,Invalid,Informational,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PerpFee.sol#L148,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PerpFee.sol#L148,,,
Unsatisfactory,validation-102,"Malicious User Can Set Trader to Zero Address, Forcing Liquidators to Cover Losses Without Reward",Invalid,Infeasible. It's the blacklisted trader that's concerning,,,https://github.com/code-423n4/2024-05-predy/blob/main/src%2Flibraries%2Forders%2FOrderInfoLib.sol#L18-L20,,https://github.com/code-423n4/2024-05-predy/blob/main/src%2Flibraries%2Forders%2FOrderInfoLib.sol#L18-L20,,,
Unsatisfactory,validation-103,Incorrect Use of `uint256` for Negative Margin Amounts in Liquidation Process,Invalid,Negative integers have been negated,,,https://github.com/code-423n4/2024-05-predy/blob/main/src%2Flibraries%2Flogic%2FLiquidationLogic.sol#L92-L107,,https://github.com/code-423n4/2024-05-predy/blob/main/src%2Flibraries%2Flogic%2FLiquidationLogic.sol#L92-L107,,,
Unsatisfactory,validation-104,Trader Address Can Be Set to Zero Which Prevents Liquidation and Causes Gas Wastage,Lack of evidence,Infeasible. It's the blacklisted trader that's concerning,,,https://github.com/code-423n4/2024-05-predy/blob/main/src%2Flibraries%2Forders%2FOrderInfoLib.sol#L18-L20,,https://github.com/code-423n4/2024-05-predy/blob/main/src%2Flibraries%2Forders%2FOrderInfoLib.sol#L18-L20,,,
Unsatisfactory,validation-108,Inability to perform partial liquidations allows huge vaults to accrue bad debt in the system,Invalid,Intended design,can use flashloan,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L104-L106,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L104-L106,,,
Unsatisfactory,validation-109,Deflation in PremiumCurve Value Due to Math Error in Implementation,Invalid,Protocol in disadvantage,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PremiumCurveModel.sol#L10-L21,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PremiumCurveModel.sol#L10-L21,,,
Unsatisfactory,validation-110,No incentive to liquidate small positions could result in protocol going underwater,Invalid. Design analysis. This is just farming. Recommendation cannot even be proved to be sound,Intended design,"not significant loss, feature improvement",,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,,,
Unsatisfactory,validation-134,Protocol is potentially vulnerable to flash-loan attacks,Invalid. Lack of evidence,Impractical mitigation,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237-L243,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237-L243,,,
Unsatisfactory,validation-143,`interest` component of lent tokens is not withdrawable by the lender,Invalid,Insufficient proof. It's an intended design and commonly known issues after all,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222-L228,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222-L228,,,
Unsatisfactory,validation-150,`createPriceFeed()` allows for injection of malicious oracles.,Invalid,Insufficient proof alleging the claim. This is a parental function to be called by its child,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18-L24,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18-L24,,,
Unsatisfactory,validation-151,Incorrect Eligibility Assessment in `_isLiquidatable` function which determines whether a vault (position) is eligible for liquidation.,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L45,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L45,,,
Unsatisfactory,validation-153,Incorrect Safety Assessment in `getIsSafe` Function which miscalculates the safety of a position by not considering the absolute value of a negative margin.,Invalid,Impractical flaw,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L63-L73,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L63-L73,,,
Unsatisfactory,validation-154,Truncation Bug in `minMinValue` Calculation due to truncation caused by division by 1e6.,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L92-L93,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L92-L93,,,
Unsatisfactory,validation-155,Incorrect Position Assessment in `calculateMinValue` where the `hasPosition` flag is not updated correctly due to the logical OR operator's short-circuit behavior.,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L129,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L129,,,
Unsatisfactory,validation-157,"Invalid Tick Value Generation in `calculateMinLowerTick` where the addition of tickSpacing to minLowerTick can result in an invalid tick value that is not a multiple of `tickSpacing`, contradicting the UniswapV3 documentation.",GPT,Insufficient proof,range size,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L137,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L126-L142,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L126-L142,,,
Unsatisfactory,validation-158,Over-Withdrawal Vulnerability in `removeAsset` Function where the calculation of `finalWithdrawAmount` can result in a value greater than the intended amount when `tokenState.assetScaler` is less than Constants.,Invalid,Impractical exploit,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L65,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L65,,,
Unsatisfactory,validation-159,"Incorrect Supply Interest Rate Calculation in updateScaler where the calculation of the supply interest rate is incorrect, leading to users being under-rewarded or over-rewarded for their supplied assets, resulting in a loss or gain of funds for the protocol or users.",Invalid,Incorrect assumption,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L201-L207,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L201-L207,,,
Unsatisfactory,validation-160,"Incomplete Liquidation Handling in `execLiquidationCall` where the removal of a position is not executed if the liquidation call fails or reverts, leading to inconsistent state, stuck funds.",Invalid. GPT,Intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L138-L149,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L138-L149,,,
Unsatisfactory,validation-161,Incorrect Condition Check in `_modifyAutoHedgeAndClose` where an incorrect condition check prevents users from modifying their positions when the order quantities and margin amount are zero.,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L212-L214,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L212-L214,,,
Unsatisfactory,validation-162,Incorrect Position Closure in autoClose where a negative sign error causes the function to open a new position in the opposite direction instead of closing the existing position.,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L298-L304,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L298-L304,,,
Unsatisfactory,validation-163,Insufficient Condition for Determining Hedge or Close where the condition solely relying on vault.openPosition values may lead to missed hedge or close opportunities.,Invalid,Unstructured POC,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L342-L344,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L342-L344,,,
Unsatisfactory,validation-164,Unprotected Assumption in `_removePosition` where the assumption that the provided `positionId` exists in the `userPositions` mapping is not verified.,Invalid,Low QA,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L402-L406,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L402-L406,,,
Unsatisfactory,validation-166,`executeOrderV3()` reverts when updating vault `recipient`,Invalid,Insufficient proof to elicit the flaws,filler or owner,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L286-L292,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L140,"https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L140,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L286-L292",,,
Unsatisfactory,validation-18,Lack of Balance Check in uniswapV3MintCallback Function,GPT,Informational,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L78,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L78,,,
Unsatisfactory,validation-188,ReentrancyGuard Not Initialized Correctly,Invalid,Insufficient/invalid proof,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L70-L75,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L70-L75,,,
Unsatisfactory,validation-189,Improper Callback Handling Can Lead to Loss of Liquidity,Invalid,Incorrect assumption,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L78-L90,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L78-L90,,,
Unsatisfactory,validation-19,Lack of pairId Validation in withdrawProtocolRevenue Function,GPT,Incorrect assumptions,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L177,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L177,,,
Unsatisfactory,validation-190,Resetting `accumulatedProtocolRevenue` Before Successful Transfer Can Lead to Lost Funds.,Invalid,It's atomically handled,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L184-L188,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L184-L188,,,
Unsatisfactory,validation-191,Incorrect Price Feed Implementation Can Lead to Exploitable Price Deviations,GPT,Incorrect assumption,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,,,
Unsatisfactory,validation-192,Missing Validation in Liquidation Call Can Lead to Exploitable Conditions,Invalid. GPT,Low QA,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L96-L103,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L96-L103,,,
Unsatisfactory,validation-193,Incorrect Assumption for baseAmountDelta Leads to Potential Price Manipulation,Invalid,Similar to readme: Non-atomic sandwich price manipulation,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L49-L66,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L49-L66,,,
Unsatisfactory,validation-194,Incomplete Fee Logic - Positive Settlement Fees Not Transferred (Security Risk),Invalid,Measures already well in place,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L40-L58,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L40-L58,,,
Unsatisfactory,validation-195,Potential Integer Overflow/Underflow in SettlementCallbackLib (Loss of Funds),Invalid,Low QA on casting,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L77-L85,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L77-L85,,,
Unsatisfactory,validation-196,`SettlementCallbackLib` Miscalculates Quote Amount for Unscaled Prices (Potential User Loss),Invalid,Unstructured POC on an impractical exploit,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L124-L134,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L124-L134,,,
Unsatisfactory,validation-197,SettlementCallbackLib.buy Allows Unauthorized Quote Token Transfer (Potential User Loss),Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L169-L181,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L169-L181,,,
Unsatisfactory,validation-198,Unforeseen Underflow in Perp.SqrtPerpAssetStatus Can Cause System Disruptions.,Invalid,The call would simply revert then,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L85,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L85,,,
Unsatisfactory,validation-199,Incorrect Interest Growth Calculation in Perp.updateRebalanceInterestGrowth (Loss of Interest),Invalid,Inconcrete example to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L166-L173,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L166-L173,,,
Unsatisfactory,validation-201,Inconsistent Position Updates Due to Unaccounted Negative Amounts in Perp Contract (PredyPool),Invalid,Incorrect assumptions,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L284-L288,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L284-L288,,,
Unsatisfactory,validation-22,Lack of Fee and Deduction Handling in withdrawProtocolRevenue Function,GPT,Inadequate proof to substantiate the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L177,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L177,,,
Unsatisfactory,validation-220,Incorrect Slippage Tolerance Calculation in `calculateSlippageTolerance` Due to Underflow.,Invalid,Low QA frequently reported by the bots,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketLib.sol#L150,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketLib.sol#L150,,,
Unsatisfactory,validation-221,Incorrect Slippage Tolerance in calculateSlippageToleranceByPrice When Prices Are Equal.,Invalid,Incorrect assumptions,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketLib.sol#L176,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketLib.sol#L176,,,
Unsatisfactory,validation-228,getUserPosition Returns Uninitialized Vault Data for Users Without Positions.,Invalid,Informational,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L247-L263,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L247-L263,,,
Unsatisfactory,validation-229,Missing Empty Signature Handling,Invalid,Low QA on empty byte check,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpOrderV3.sol#L78-L80,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpOrderV3.sol#L78-L80,,,
Unsatisfactory,validation-236,Accumulated `creator revenue` cannot be withdrawn if the set `poolOwner` is blacklisted by the `pool.token`.,Invalid,QA at best. Invalid per C4 rule,erc20 pause/blacklist,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L208-L210,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L208-L210",,,
Unsatisfactory,validation-238,Reentrancy,Invalid,Devoid of actual scenario given,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L313,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L313,,,
Unsatisfactory,validation-250,Potential Manipulation of Interest Rates and Fees in `registerPair` Function,Role is trusted,Impractical exploit,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L105-L110,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L105-L110,,,
Unsatisfactory,validation-256,Possible `interest-free` loans due to the current interest rate update mechanism,Invalid,Intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L31-L34,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L31-L34,,,
Unsatisfactory,validation-258,Any user can register `quote token` address for any pair,Invalid,Pool owner is trusted,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarket.sol#L96-L101,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarket.sol#L96-L101,,,
Unsatisfactory,validation-262,A `trader` can deposit any non-vault assets and open a position due to missing validation in `permit`,Invalid,Low QA,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L447-L454,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L447-L454,,,
Unsatisfactory,validation-271,Liquidity providers unable to withdraw when the pool is in deficit state,Invalid,Intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L67,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L67,,,
Unsatisfactory,validation-299,Solmate safetransfer and safetransferfrom does not check the code size of the  token address,Lack of evidence.,Low QA frequently reported by the bots,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L4,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L4,,,
Unsatisfactory,validation-300,Protocols limited accessibility when it comes to chainlink oracle,Low quality report,Low QA. There's no fallback oracle entailed anyway,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,,,
Unsatisfactory,validation-324,reallocation of LP funds can lead to wrong estimation of `_assetStatus.lastFee{0/1}Growth` when there is no available liquidity in the LP position that constitutes the Squart,Report is unreadable,Insufficient/unstructured proof to elicit the flaws,reallocation to empty range,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L256,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L256,,,
Unsatisfactory,validation-326,Reentrancy Vulnerability in supply and withdraw Functions,Invalid,Devoid of actual scenario given,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,,,
Unsatisfactory,validation-34,"Privacy breach in the getUserPosition function in the PerpMarketV1 file because anyone can query user positions, exposing sensitive financial data",Invalid,Intended behaviour,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L247-L263,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L247-L263,,,
Unsatisfactory,validation-346,Unauthorized Trading and Potential Out of Gas Errors Due to allowedTraders Mapping Mismanagement,Invalid.,Informational,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L300,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L300,,,
Unsatisfactory,validation-35,Lack of settlementData Validation in ReallocationLogic.reallocate Function,GPT,Insufficient POC,,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L256,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/ReallocationLogic.sol#L27",,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L256,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/ReallocationLogic.sol#L27",,,
Unsatisfactory,validation-37,Flash Deposit Exploit Potential in Liquidation Logic,GPT,Insufficient proof,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,,,
Unsatisfactory,validation-38,Bypassing Initial States in trade Function,GPT,Informational,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L265,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L265,,,
Unsatisfactory,validation-394,`interest` is paid on  debt while liquidation is running,Invalid,Intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L49-L53,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L49-L53,,,
Unsatisfactory,validation-400,Protocol lacks graceful retirement feature,Invalid,Informational,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222-L228,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222-L228,,,
Unsatisfactory,validation-402,Incorrect token transfer Logic in `sell` and `buy` during direct fill.,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L99-L108,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L99-L108,,,
Unsatisfactory,validation-423,`getSqrtTWAP()`  will revert when `ago` calculation underflows,Invalid,Insensible mitigation,negative tick,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L57,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,,,
Unsatisfactory,validation-437,`entryTokenAddress` is not validated before executing a trade in `quoteTrade()`,Invalid,Low QA,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L315-L331,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L315-L331,,,
Unsatisfactory,validation-440,Incorrect accounting of total and borrowed amounts in `updateSqrtPosition` function leading to potential fund loss,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L551-L558,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L551-L558,,,
Unsatisfactory,validation-443,Re-org attack in PriceFeed.sol,Invalid,Low QA frequently reported by the bots,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18-L25,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18-L25,,,
Unsatisfactory,validation-444,PriceFeed contract vulnerable to arbitrage,Invalid,Informational,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L44-L60,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L44-L60,,,
Unsatisfactory,validation-459,wrong value of VALID_TIME_PERIOD,Invalid,Insufficient proof,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L35,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L35,,,
Unsatisfactory,validation-48,Incomplete createVault Function in PredyPool Contract,Invalid,Insufficient proof,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L337,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L337,,,
Unsatisfactory,validation-487,Malicious pool owner (NOT TRUSTED) can force liquidate safe positions,"Invalid. Role is trusted. No evidence that this breaks protocol trusted assumptions, damage is only to tha vault.",Pool owner is trusted,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L167-L169,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L167-L169,,,
Unsatisfactory,validation-488,Initial interest rate calculation erroneously applies a large interest rate to pools,,Insufficient proof on uninitialized pairStatus.lastUpdateTimestamp on a library contract,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L22-L48,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L22-L48,,,
Unsatisfactory,validation-489,"Tick ranges are rebalanced despite being in-range, but there is no swap to rebalance the liquidity of the new range, causing pairs to have an incorrect amount of liquidity for the new tick range",Invalid. Liquidity should be put to the new range regardless even if it was in-range from the previous ticks.,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L206,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L206,,,
Unsatisfactory,validation-498,Interest rate `lastUpdatedTimestamp` is updated to the current `block.timestamp` despite no actual update to the `pool status` values,Invalid,Insufficient proof on flaws relating to a library function,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L22-L48,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L22-L48,,,
Unsatisfactory,validation-510,over-approval issue  in the UniswapSettlement from the way token approvals are handled,Bot Finding. L-1,L-1 from Analyzer,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L31,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L31,,,
Unsatisfactory,validation-548,`borrowedAmount` does not always add to `_assetStatus.fee{0/1}Growth` and `borrowPremium{0/1}Growth` when `utilization > Constants.SQUART_KINK_UR`,Invalid,Insufficient/unstructured proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L393-L407,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L393-L407,,,
Unsatisfactory,validation-551,Squart positions are rebalanced into a wrong range due to rounding error in tick calculation causing the position to earn less fees,Invalid,Intended behaviour,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L414-L420,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L414-L420,,,
Unsatisfactory,validation-585,Trade transactions can be DOS’d,Invalid,Intended design,slot0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L426-L438,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L426-L438",,,
Unsatisfactory,validation-66,Incorrect Handling of Negative marginAmount Values in PerpOrderLib.resolve(),Invalid,Unstructured POC on an impractical exploit,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpOrder.sol#L73-L77,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpOrder.sol#L73-L77,,,
Unsatisfactory,validation-663,Hardcoded Fee Limits Restrict Economic Efficiency and Innovation,Invalid.,Intended behaviour,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L206,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L206,,,
Unsatisfactory,validation-665,Unvalidated Trade Results in Liquidation Logic Risk Financial Integrity and State Accuracy,Invalid.,Informational,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L67,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L67,,,
Unsatisfactory,validation-667,Transaction Reordering by Miners Exposes Interest Rate Calculation to Manipulation,Invalid.,Infeasible in POS,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L32,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L32,,,
Unsatisfactory,validation-669,Incomplete Reset of Nested Structures in Smart Contracts Risks Data Integrity,Invalid.,That's not how `delete` works,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/types/GlobalData.sol#L69,,https://github.com/code-423n4/2024-05-predy/blob/main/src/types/GlobalData.sol#L69,,,
Unsatisfactory,validation-67,Delayed Initialization of operator Variable Leads to Access Control Bypass in `initialize()` Function,Invalid,Incorrect assumptions,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L70-L75,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L70-L75,,,
Unsatisfactory,validation-671,Incorrect Range Calculation When Available Amount is Zero Results in Suboptimal Trading Efficiency,GPT,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L56,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L56,,,
Unsatisfactory,validation-672,Don't use slot0 for trades,Low quality,Readme: Non-atomic sandwich price manipulation,slot0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L38-L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L38-L46",,,
Unsatisfactory,validation-674,Lack of Disable Function for Uniswap Pools Exposes Smart Contract to Unauthorized Access and Potential Fund Drainage,Role is trusted to not add malicious addresses,It's an admin controlled call,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L38,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L38,,,
Unsatisfactory,validation-676,Potential Out-of-Gas Errors Due to Lack of Uniswap Pool Removal Mechanism,Invalid.,Informational,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L38,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L38,,,
Unsatisfactory,validation-677,Incorrect Handling of Negative Exponents in Price Calculation,Invalid.,Lacking concrete example to elicit the flaw,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L50,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L50,,,
Unsatisfactory,validation-68,Incorrect Token Transfer in uniswapV3MintCallback Function Causes Liquidity Imbalance and Potential Loss of Funds.,Invalid,Incorrect assumptions,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L84-L89,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L84-L89,,,
Unsatisfactory,validation-680,There should be deadline for swap,Low quality,Inadequate elaboration,swap deadline,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L38-L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L38-L46",,,
Unsatisfactory,validation-69,Incorrect Handling of Zero Amounts in checkAutoHedgeAndClose Function Leads to Potential Position Management Errors,Invalid,Unstructured POC,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L342-L344,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L342-L344,,,
Unsatisfactory,validation-70,Unrestricted Position ID Assignment in _getOrInitPosition Function Enables Data Corruption and Unexpected Behavior,Invalid,User can not call _getOrInitPosition as it is an internal function,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L408-L434,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L408-L434,,,
Unsatisfactory,validation-71,"Lack of Validation in `_verifyOrder` Function Enables Unauthorized Token Transfers, Unintended Recipients, and Incorrect Amounts",Invalid,Low QA,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L444-L455,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L444-L455,,,
Unsatisfactory,validation-72,Unauthorized Position Manipulation and Closure Due to Lack of Zero Min Margin Check.,Invalid,Incorrect assumptions and insufficient proof,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L200-L211,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L200-L211,,,
Unsatisfactory,validation-73,Unauthorized Trade Execution via Signature Bypass.,Invalid,Low QA similar to L-7 from Analyzer,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L282-L311,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L282-L311,,,
Unsatisfactory,validation-78,Lenders cannot supply tokens to or withdraw from lending pools due to access control conflict,Invalid,Incorrect assumptions,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,,,
Unsatisfactory,validation-81,Any user can hedge and close  any `positionId`,Invalid,Insufficient proof,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L282-L311,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L282-L311,,,
Unsatisfactory,validation-83,Break of Protocol Functionality when Position and Trade Amount are both Negative Values,Invalid,Insufficient proof to elicit the flaws,negative pos/trade amt,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L682,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L682,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L682,,,
Unsatisfactory,validation-86,Rebalance interest growth is never updated during supply and withdraw,Invalid,Insufficient proof to elicit the flaws,miss interest growth,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L32-L33,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L32-L33,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L65-L66","https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L32-L33,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L65-L66",,,
Unsatisfactory,validation-88,Incorrect `ratio` is returned when `price2 > price1`.,Invalid. The ratio should be based in price2 always,Insufficient proof to elicit the flaws,validatestopprice price1 or price2,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L183-L185,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L138-L176,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L138-L176,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L183-L185",,,
Unsatisfactory,validation-91,Incomplete Tuple Return in getAvailableLiquidityAmount Function,Invalid,Informational,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L332-L343,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L332-L343,,,
Unsatisfactory,validation-92,Inconsistent State Vulnerability in `settleUserBalance` Function where the update order of user rebalance entry values and positions can lead to an inconsistent state if the function is interrupted or reverted.,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L353-L371,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L353-L371,,,
Unsatisfactory,validation-93,Incorrect Fee and Premium Calculations due to Overwritten `lastFeeGrowth` Values,Invalid,Unstructured POC,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L398-L409,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L398-L409,,,
Unsatisfactory,validation-94,Inconsistent Fee Growth Tracking due to Edge Case in `computeRequiredAmounts`.,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L443-L449,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L443-L449,,,
Unsatisfactory,validation-95,Incorrect Handling of `closeAmount` and `openAmount` Leads to Inconsistent System State and Potential Financial Losses.,Invalid,Impractical exploit,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L538-L543,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L538-L543,,,
Unsatisfactory,validation-96,Incorrect Calculation of `closeStableAmount` Leads to Inaccurate Payoff When Partially Closing a Position,Invalid,Unstructured POC on an impractical exploit,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L689,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L689,,,
Unsatisfactory,validation-97,Incorrect Liquidity Check in decrease Function Leads to Potential Loss of Funds or Unintended Consequences.,Invalid,Inconsequential refactoring,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L723-L725,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L723-L725,,,
Unsatisfactory,validation-98,Incorrect Update Amounts in updatePosition Function Leads to Potential Loss of Funds Due to Discrepancies in Recorded Positions.,Invalid,Insufficient proof,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L798-L803,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L798-L803,,,
Unsatisfactory,validation-99,Inconsistent Trade Fee Calculation Due to Outdated User Position.,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PerpFee.sol#L46-L55,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PerpFee.sol#L46-L55,,,
Unsatisfactory,validation-586,Incorrect Timestamp Update Leading to Inaccurate Interest Calculations and Potential Financial Losses,Invalid,Insufficient proof on flaws relating to a library function,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L26-L48,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L26-L48,,,
Unsatisfactory,validation-599,Potential Token Loss Due to Rounding Issue in Small Deposits,Invalid,Intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222-L228,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222-L228,,,
Unsatisfactory,validation-610,Front-running Risk Leading to Failed Withdrawals Due to Insufficient Collateral,Invalid,Intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L67,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L67,,,
Unsatisfactory,validation-214,Unauthorized Liquidation in execLiquidationCall,Invalid,Incorrect assumptions,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L313,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L313,,,
Unsatisfactory,validation-462,wrong calculation of price in getSqrtPrice.,Invalid,Lacking concrete example to elicit the flaw,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,,,
Unsatisfactory,validation-493,"`PriceFeed` does not handle `Pyth::getPriceNoOlderThan` edge cases, causing `DoS`",Invalid,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,,,
Unsatisfactory,validation-512,Validation Flaw in Uniswap Settlement data,Invalid,Low QA,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L34,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L34,,,
Unsatisfactory,validation-518,Gamma position can be `removed` without closing the `position`.,Invalid,Insufficient proof on an intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L79,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L79,,,
Unsatisfactory,validation-550,Increase and decrease of `liquidity` does not update the fee growth.,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L707,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L707,,,
Unsatisfactory,validation-33,Replay Vulnerability in PerpMarketV1 Contract,Low quality,Insufficient proof eliciting the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L149,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L149,,,
Unsatisfactory,validation-200,Incomplete Rebalancing Logic in Perp.reallocate Can Cause Issues When Adding Liquidity.,GPT,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L223-L230,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L223-L230,,,
Unsatisfactory,validation-231,Lack of Amount Validation in PerpMarketV3 _verifyOrderV3 Function Can Cause Unauthorized Token Withdrawals.,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L327-L338,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L327-L338,,,
Unsatisfactory,validation-26,Unauthourised Access in the PriceFeed contract because anyone can create a new PriceFeed contract using the createPriceFeed function and anyone can call the getSqrtPrice function,Invalid,Intended behaviour,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18-L25,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18-L25,,,
Unsatisfactory,validation-32,"In the GammaTradeMarketLib file the saveUserPosition function is vulnerable to data integrity issues because malicious actors can manipulate critical parameters such as expiration, limits, and slippage tolerances",GPT,Intended behaviour,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketLib.sol#L189-L220,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketLib.sol#L189-L220,,,
Unsatisfactory,validation-325,Missing Access Control Checks in withdrawProtocolRevenue and withdrawCreatorRevenue,GPT,It's an operator controlled call,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L177,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L177,,,
Unsatisfactory,validation-327,Unchecked Contract Storage Modification and Arbitrary Code Execution,GPT,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L313,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L313,,,
Unsatisfactory,validation-328,Arithmetic Overflow and Underflow Vulnerability in the trade Function,Invalid,Safe Math alraedy available in Solidity 8,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L265,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L265,,,
Unsatisfactory,validation-495,`PriceFeed` does not account for the exponent of the base price,Invalid. Exponent require statement above,Lacking concrete example to elicit the flaw,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,,,
Unsatisfactory,validation-496,"`PriceFeed` calculation may overflow due to performing a direct multiplication with `Q96`, causing DoS",Invalid,Impractical flaw,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,,,
Unsatisfactory,validation-497,`ApplyInterestLib::applyInterestForPoolStatus` may always calculate `interestRate = 0` due to division by `365 days`,Invalid. Is not considering order of operants,Insufficient proof on flaws relating to a library function,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L22-L48,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L22-L48,,,
Unsatisfactory,validation-499,`InterestRateModel::calculateInterestRate` calculation is incorrect,Invalid. The case utilizationRatio == irmParams.kinkRate is semantically equivalent in both branches,Inconsequential trivial refactoring,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/InterestRateModel.sol#L18-L33,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/InterestRateModel.sol#L18-L33,,,
Unsatisfactory,validation-502,`PredyPool::reallocate` may experience DoS due to rounding up when calculating liquidity to trade,Lack of evidence,Intended behaviour,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L314-L319,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L314-L319,,,
Unsatisfactory,validation-503,"`Perp::computeRequiredAmounts` applies the calculated `offset` incorrectly, leading to incorrect amount of tokens traded",Invalid. Lack of evidence and weak explanation on the root impact,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L45-L47,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L45-L47,,,
Unsatisfactory,validation-12,Rounding down `protocolFee` favors traders &  leaks value from protocol,"Dust due to rounding. Seems QA, round loss is capped at 1",Informational,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L71C8-L72C70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L194-L198,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L194-L198,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L71C8-L72C70",,,
Unsatisfactory,validation-136,`burnAmount` is rounded down during withdrawal,Round in favor of the protocol. Seems QA report does not give any meaningful impact,Informational,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L57,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L79-L91,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L79-L91,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L57",,,
Unsatisfactory,validation-212,Liquidated position is not removed in all Liquidation instances.,Liquidated position is not removed,Intended design,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L138-L149,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L138-L149,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39",,,
Unsatisfactory,validation-49,Possible DoS with `permit` through front-running.,Front-run permit signatures,Low QA,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L330,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L444-L455,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L444-L455,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L330",,,
Unsatisfactory,validation-490,"`PredyPool::withdraw` burns bond tokens by rounding down in favor of users, causing a loss for lenders",Round in favor of the protocol. Seems QA report does not give any meaningful impact,Intended design and commonly known issues,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L57,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L230-L243,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L230-L243,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L57",,,
Unsatisfactory,validation-491,"First user to open a position will never be able to close it because their `vaultId = 0`, which always creates a new vault",First vault is assigned an invalid id,Insufficient proof to elicit the flaws,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/VaultLib.sol#L31-L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/VaultLib.sol#L24-L66,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/VaultLib.sol#L24-L66,,,
Unsatisfactory,validation-492,Permit signatures do not verify receiving token address,"Seems like the ""to"" parameter is not part of the hash to verify",Low QA,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L314C5-L338C6,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L123,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L123,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L314C5-L338C6",,,
Unsatisfactory,validation-494,"`PriceFeed` requires the base price to have an exponent value of exactly `-8`, causing DoS",Pyth only works with decimals == 8,Lacking concrete example to elicit the flaw,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L50,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,,,
Unsatisfactory,validation-504,"`Reallocation::calculateUsableTick` will experience precision loss due to division before multiplication, creating an incorrect tick range for pairs",Precision loss. Seems QA. Lack of evidence for meaningful impact,result >> tickSpacing to determine discrete number of tickSpacing,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L276-L277,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L276-L277",,,
Unsatisfactory,validation-564,"The order of quoteToken(token0, token1) in the addPair function is reversed, resulting in incorrect order of the _storePairStatus parameters.",Incorrect order of tokens,Incorrect assumptions,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L76,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L78-L87,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L78-L87,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L76",,,
Unsatisfactory,validation-260,"When calculating supplyInterestRate, getTotalDebtValue(tokenState)>getTotalCollateralValue(tokenState) is not considered",No cap on the supply interest rate. Seems QA as it a weird edge case where debt in the system is greater than the collateral value,Insufficient proof to elicit the flaws,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L200-L207,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L200-L207,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L200-L207,,,
Unsatisfactory,validation-646,Unprotected State Modification,Not sure about the validity.,Intended behaviour,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarket.sol#L97,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarket.sol#L97,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarket.sol#L97,,,
Unsatisfactory,validation-213,"totalCompoundDeposited is scaled twice, resulting in incorrect TotalCollateralValue",Invalid. The code wants to normalize to 1e18,Incorrect assumptions,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L42-L44,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L42-L44,,,
Unsatisfactory,validation-219,Invalid Position ID Vulnerability in executeTradeL2.,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketL2.sol#L42-L70,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketL2.sol#L42-L70,,,
Unsatisfactory,validation-222,getFinalTradeAmount: Incorrect Calculation for Short Position Reduction.,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L49-L60,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L49-L60,,,
Unsatisfactory,validation-224,Incorrect Limit Price Validation for Zero Trade Amount,Invalid,Inconsequential refactoring,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L127-L133,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L127-L133,,,
Unsatisfactory,validation-225,Incorrect Stop Price Validation for Sell Orders (Lower Than Oracle Price),Invalid,Incorrect assumptions,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L164-L173,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L164-L173,,,
Unsatisfactory,validation-226,Incorrect Market Order Validation for Sell Orders (Decayed Price Check),Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L200-L206,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L200-L206,,,
Unsatisfactory,validation-227,Incorrect Net Value Usage in Initial Margin Calculation (_calculateInitialMargin).,Invalid,Insufficient proof to elicit the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L233,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L233,,,
Unsatisfactory,validation-230,"Trader Address Used Instead of Witness Address in PerpMarketV1 _verifyOrder function, Leading to Potential Signature Verification Failure and Unauthorized Transfers.",Invalid,Low QA similar to L-7 from Analyzer,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L314-L325,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L314-L325,,,
Satisfactory,validation-472,Possible DoS When calling `GammaTradeMarket::_removePosition` will cause user position to not be able to get liquidated,Unbounded loop DoS in removeItem,OOG that's beyond input control,oracle sequencer,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L402-L406,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L9C5-L31C6",https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L20-L32,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L20-L31,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L9-L32,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L402-L406",validation-472,"DUPE-ArrayLib-001,DUPE-GammaTradeMarket-001",
Satisfactory,validation-305,A malicious filler can prevent trades in markets inheriting from `BaseMarketUpgradable`,Incorrect access control,Filler is trusted,approve 0,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L136C5-L140C10,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L128-L130,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L140,"https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L136-L140,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L128-L130",validation-305,"DUPE-BaseMarketUpgradable-001,DUPE-BaseMarketUpgradable-002",
Satisfactory,validation-466,"No grace time for traders when L2 sequencers come online after being down, making them prone to liquidations",No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58",validation-466,"DUPE-LiquidationLogic-001,DUPE-PriceFeed-001",
Satisfactory,validation-625,Potential failure in liquidation process due to blacklisted recipients,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,validation-625,DUPE-LiquidationLogic-001,
Satisfactory,validation-280,Limit Price Can Be Bypassed,Incorrect logic clause when validating orders,Conditional leaks,non elaborative,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100C15-L101C104,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L101,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100-L101,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100C15-L101C104,validation-280,DUPE-PerpMarketLib-002,
Satisfactory,validation-524,Validation Failure in `SlippageLib.checkPrice`,Ratio of oracle price and stop price incorrectly computed,Inconsequential and trivial refactoring on the intended conditionals,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L179C8-L181C10,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L178-L180,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/SlippageLib.sol#L35-L42,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/SlippageLib.sol#L35-L42,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L179C8-L181C10",validation-524,"DUPE-PerpMarketLib-003,DUPE-SlippageLib-001",
Satisfactory,findings-12,The interest rate is not updated before changing the pair's IRM parameters,Interest rate is not updated before changing parameters,Missing accrued fee calculation prior to fee update,update rate first,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,findings-12,DUPE-PredyPool-001,
Satisfactory,validation-249,Uninitialized Implementation Contracts are not Completely Protected,"Implementation contracts can be initialized. Seems QA, this can be solved in deployment.",L-6 from Analyzer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,validation-249,DUPE-PredyPool-002,
Satisfactory,findings-25,Lack of slippage controls in supply() & withdraw() functions,Lack of slippage protection. Seems QA as it is a feature request,Non-frontrunning slippage,slippage supply/withdraw,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L22-L44,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222","https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L22-L44",findings-25,"DUPE-PredyPool-003,DUPE-PredyPool-004,DUPE-SupplyLogic-001",DUPE-SupplyLogic-001
Satisfactory,validation-244,Chainlink's `latestRoundData` might return stale or incorrect results,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,big risk in doing this,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,
Satisfactory,validation-642,Risk of Incorrect Price Feeds Due to Chainlink Oracle Circuit Breaker Activation,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,swap deadline,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-642,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",
Satisfactory,findings-31,"Pyth price feed may be stale, causing PriceFeed.sol to be unusable",Update is not an issue as it can be done by the protocol,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48",findings-31,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",
Satisfactory,validation-285,Negative Tick Rounding raises price of asset,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L72,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70",validation-285,"DUPE-UniHelper-001,DUPE-UniHelper-001",
Satisfactory,validation-4,UniswapV3 slot0 should not be used to get price as it can be manipulated.,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L14,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,validation-4,DUPE-UniHelper-002,
Satisfactory,validation-87,Using `block.timestamp` for swap deadline offers no protection,block.timestamp is an invalid deadline,Infeasible in POS,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",