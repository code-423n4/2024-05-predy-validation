status,issue,title,validator comment 1,validator comment 2,validator comment 3,root cause 1,root cause 2,root cause 3,merged root cause,primary finding,proposed root cause group,,,
Satisfactory,validation-165,Adversaries can create a new pair with the same uniswapPool as exising pair and disrupt reallocation process,Lack of check for already added pool,Low QA. It's pairId that matters,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L53-L94,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L53-L94,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L202-L252,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L202-L252,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L53-L94",validation-595,"DUPE-AddPairLogic-001,DUPE-Perp-001",DUPE-AddPairLogic-001,DUPE-Perp-001,
Satisfactory,validation-595,One pair can steal another pair's Uniswap liquidity during `reallocate()` call if both pairs operate on the same Uniswap pool and both have the same upper and lower tick during reallocation.,Lack of check for already added pool,Known issue per readme pertaning to small Uniswap liquidity,slippage hardcode DOS,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L53-L94,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L262-L289,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L202-L252,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L262-L289,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L53-L94,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L202-L252",validation-595,"DUPE-AddPairLogic-001,DUPE-Perp-001,DUPE-Perp-002",DUPE-AddPairLogic-001,DUPE-Perp-001,DUPE-Perp-002
Satisfactory,validation-283,Changing Risk Parameters Can Lead to Unexpected Liquidations,Seems QA. Suboptimal design,Owner is trusted per readme,"rounding dust, no big loss",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L118,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L214,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L213-L217,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L213-L217,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L118",validation-283,"DUPE-AddPairLogic-002,DUPE-AddPairLogic-003",DUPE-AddPairLogic-002,DUPE-AddPairLogic-003,
Satisfactory,validation-514,`updateIRMParams` does not call `applyInterestForToken` before updating `irmParams` which leads to incorrect calculation of interest rate for subsequent trades.,Interest rate is not updated before changing parameters,Missing accrued fee calculation prior to fee update,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L128,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L128,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139",findings-12,"DUPE-AddPairLogic-004,DUPE-PredyPool-001",DUPE-AddPairLogic-004,DUPE-PredyPool-001,
Satisfactory,validation-340,Dust will be accumulated when calculating the protocol and creator revenues due to the division performed,"Dust due to rounding. Seems QA, round loss is capped at 1",Informational,&& ||,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L71C8-L72C70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L50-L73,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L50-L73,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L71C8-L72C70,validation-340,DUPE-ApplyInterestLib-001,,,
Satisfactory,validation-453,`ApplyInterestLib::applyInterestForPoolStatus` part of the totalProtocolFee will never be distributed,"Dust due to rounding. Seems QA, round loss is capped at 1",Informational,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L71C8-L72C70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L50,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L50-L73,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L50-L73,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L71C8-L72C70",validation-340,"DUPE-ApplyInterestLib-001,DUPE-ApplyInterestLib-001",DUPE-ApplyInterestLib-001,DUPE-ApplyInterestLib-001,
Satisfactory,validation-357,Accrued fee should be computed before applying the new fee rate when updated by pool owner,Interest rate is not updated before changing parameters,Missing accrued fee calculation prior to fee update,decimalsDiff should get this value from oracle,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L26-L48,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L147-L149,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L26-L48,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L147-L149",findings-12,"DUPE-ApplyInterestLib-002,DUPE-PredyPool-001,DUPE-PredyPool-010",DUPE-ApplyInterestLib-002,DUPE-PredyPool-001,DUPE-PredyPool-010
Satisfactory,findings-43,"ArrayLib uses an O(n) implementation for removeItem, this may cause out-of-gas issue while removing position in GammaTradeMarket",Unbounded loop DoS in removeItem,OOG that's beyond input control,O(N) remove,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L402-L406,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L9C5-L31C6",https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L9-L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L20-L31,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L9-L31,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L402-L406",validation-472,"DUPE-ArrayLib-001,DUPE-GammaTradeMarket-001",DUPE-ArrayLib-001,DUPE-GammaTradeMarket-001,
Satisfactory,validation-232,Malicious user can cause `GammaTradeMarket.sol#execLiquidationCall` to fail from outOfGas error by opening a lot of small positions prior to actual position,Unbounded loop DoS in removeItem,OOG that's beyond input control,upgrade should remove allowance,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L402-L406,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L9C5-L31C6",https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L9-L31,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L20-L31,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L9-L31,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L402-L406",validation-472,"DUPE-ArrayLib-001,DUPE-GammaTradeMarket-001",DUPE-ArrayLib-001,DUPE-GammaTradeMarket-001,
Satisfactory,validation-418,Potential Denial of Service (DoS) Vulnerability in `getUserPositions` Function,unbounded loop DoS,Low QA. Positions can be removed.,oracle addr immutable,https://github.com/code-423n4/predyx/blob/main/src/markets/gamma/GammaTradeMarket.sol#L382-L386,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L361,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L20-L31,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L361,https://github.com/code-423n4/predyx/blob/main/src/markets/gamma/GammaTradeMarket.sol#L382-L386,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L20-L31",validation-418,"DUPE-ArrayLib-001,DUPE-GammaTradeMarket-004,DUPE-GammaTradeMarket-006",DUPE-ArrayLib-001,DUPE-GammaTradeMarket-004,DUPE-GammaTradeMarket-006
Satisfactory,validation-472,Possible DoS When calling `GammaTradeMarket::_removePosition` will cause user position to not be able to get liquidated,Unbounded loop DoS in removeItem,OOG that's beyond input control,oracle sequencer,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L402-L406,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L9C5-L31C6",https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L20-L32,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L20-L31,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L9-L32,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L402-L406",validation-472,"DUPE-ArrayLib-001,DUPE-GammaTradeMarket-001",DUPE-ArrayLib-001,DUPE-GammaTradeMarket-001,
Satisfactory,validation-587,GammaTradeMarket::getUserPositions Has an Unbounded For Loop Can Be DDOS,unbounded loop DoS,Low QA. Positions can be removed.,pyth math,https://github.com/code-423n4/predyx/blob/main/src/markets/gamma/GammaTradeMarket.sol#L382-L386,https://github.com/code-423n4/predyx/blob/main/src/markets/gamma/GammaTradeMarket.sol#L382-L386,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L20-L31,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L20-L31,https://github.com/code-423n4/predyx/blob/main/src/markets/gamma/GammaTradeMarket.sol#L382-L386",validation-418,"DUPE-ArrayLib-001,DUPE-GammaTradeMarket-004",DUPE-ArrayLib-001,DUPE-GammaTradeMarket-004,
Satisfactory,validation-395,"In `GammaTradeMarket`, an attacker can fill up the `positionIDs[attacker]` array and make the filler pay maximum gas limit per transaction",Invalid,OOG that's beyond input control,negative tick,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L20-L31,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L20-L31,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L99",validation-395,"DUPE-ArrayLib-001,DUPE-GammaTradeMarket-005",DUPE-ArrayLib-001,DUPE-GammaTradeMarket-005,
Satisfactory,validation-366,Storage Collision in `BaseMarket.sol` and `BaseMarketUpgradable.sol`,Dangerous upgrade,Informational,erc20 pause/blacklist,"https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarket.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L25",https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarket.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarket.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L25","https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarket.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L25",validation-366,"DUPE-BaseMarket-001,DUPE-BaseMarketUpgradable-003",DUPE-BaseMarket-001,DUPE-BaseMarketUpgradable-003,
Satisfactory,validation-438,Wrong bool parameter returned during reallocation can lead to issues,Incorrect returned value,Non-concrete POC entailed,oracle minAnswer,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/ReallocationLogic.sol#L29C23-L29C37,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarket.sol#L42,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/ReallocationLogic.sol#L27,"https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarket.sol#L42,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/ReallocationLogic.sol#L29C23-L29C37,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/ReallocationLogic.sol#L27",validation-438,"DUPE-BaseMarket-002,DUPE-ReallocationLogic-001,DUPE-ReallocationLogic-002",DUPE-BaseMarket-002,DUPE-ReallocationLogic-001,DUPE-ReallocationLogic-002
Satisfactory,validation-305,A malicious filler can prevent trades in markets inheriting from `BaseMarketUpgradable`,Incorrect access control,Filler is trusted,approve 0,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L136C5-L140C10,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L128-L130,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L140,"https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L136-L140,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L128-L130",validation-305,"DUPE-BaseMarketUpgradable-001,DUPE-BaseMarketUpgradable-002",DUPE-BaseMarketUpgradable-001,DUPE-BaseMarketUpgradable-002,
Satisfactory,validation-312,`_whiteListedSettlements` can be manipulated by a malicious filler,Incorrect access control,Filler is trusted,liq buffer feature improvement,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L136C5-L140C10,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L140-L142,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L140,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L136C5-L140C10,validation-305,DUPE-BaseMarketUpgradable-001,,,
Satisfactory,validation-387,Mid 02 Improper BaseMarketUpgradeable Access Control,Incorrect access control,Filler is trusted,filler or owner,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L136C5-L140C10,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L124-L128,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L140,"https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L136-L140,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L124-L128",validation-305,"DUPE-BaseMarketUpgradable-001,DUPE-BaseMarketUpgradable-002",DUPE-BaseMarketUpgradable-001,DUPE-BaseMarketUpgradable-002,
Satisfactory,validation-63,"`PerpMarketLib::validateStopPrice()` method incorrectly calls `DecayLib.decay2()` with the return value of `PerpMarketLib::ratio(oraclePrice, stopPrice)` as the last parameter",Incorrect passed argument,Insufficient proof (devoid of concrete example),,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L152,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/orders/DecayLib.sol#L13",https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L138-L176,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L138-L176,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L138-L176,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/orders/DecayLib.sol#L13",validation-63,"DUPE-DecayLib-001,DUPE-PerpMarketLib-001",DUPE-DecayLib-001,DUPE-PerpMarketLib-001,
Satisfactory,validation-411,`PredyPool.sol` implemetation contract can be initialized by anyone and taken over by an attacker,"Implementation contracts can be initialized. Seems QA, this can be solved in deployment.",L-6 from Analyzer,negative tick,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L67,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L67",validation-249,"DUPE-GammaTradeMarket-002,DUPE-PredyPool-002",DUPE-GammaTradeMarket-002,DUPE-PredyPool-002,
Satisfactory,validation-580,`executeTrade(...)` can be DOSed due to the non configurable `MAX_ACCEPTABLE_SQRT_PRICE_RANGE`,MAX_ACCEPTABLE should be configurable,Informational,partial liquidation,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/SlippageLib.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L203-L208,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L203-L208,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/SlippageLib.sol#L12-L55","https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L203-L208,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/SlippageLib.sol#L12-L55",validation-580,"DUPE-GammaTradeMarket-003,DUPE-SlippageLib-001",DUPE-GammaTradeMarket-003,DUPE-SlippageLib-001,
Satisfactory,validation-205,GammaTradeMarket upgrade corrupts storage,Dangerous upgrade,Low QA/Informational,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketLib.sol#L14-L28,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketLib.sol#L19,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketLib.sol#L19,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketLib.sol#L14-L28,validation-205,DUPE-GammaTradeMarketLib-001,,,
Satisfactory,validation-477,Immediate Trade Liquidation Risks with Fillers,Invalid,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,oracle sequencer grace period,,"https://github.com/code-423n4/predyx/blob/main/src/PriceFeed.sol#L47,https://github.com/code-423n4/2024-05-predy/blob/main/src/interfaces/IFillerMarket.sol#L1",https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketWrapper.sol#L11-L17,"https://github.com/code-423n4/predyx/blob/main/src/PriceFeed.sol#L47,https://github.com/code-423n4/2024-05-predy/blob/main/src/interfaces/IFillerMarket.sol#L1,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketWrapper.sol#L11-L17",findings-31,"DUPE-GammaTradeMarketWrapper-001,DUPE-IFillerMarket-001,DUPE-PriceFeed-001",DUPE-GammaTradeMarketWrapper-001,DUPE-IFillerMarket-001,DUPE-PriceFeed-001
Satisfactory,findings-15,"Liquidation of the insolvent vault may fail for pairs that include tokens with a blacklist (USDC, USDT)",Liquidation DoS due to blacklisting or pausing,Blacklisting makes liquidation insolvent,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,validation-625,DUPE-LiquidationLogic-001,,,
Satisfactory,findings-20,USDC and USDT vaults may avoid complete liquidation,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L265,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L265",validation-625,"DUPE-LiquidationLogic-001,DUPE-PerpMarketV1-002",DUPE-LiquidationLogic-001,DUPE-PerpMarketV1-002,
Satisfactory,findings-24,Full liquidation of vault will not be possible when there is a left over margin and the vault recipient is blacklisted.,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89-L100,validation-625,DUPE-LiquidationLogic-001,,,
Satisfactory,findings-28,Liquidators do not need to pay off bad debt when liquidating a portion of the position,Gaming the liquidation mechanism,Intended design,partial liquidation,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L62-L63,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89",findings-9,"DUPE-LiquidationLogic-001,DUPE-LiquidationLogic-001",DUPE-LiquidationLogic-001,DUPE-LiquidationLogic-001,
Satisfactory,findings-30,Chainlink aggregator does not handle minAnswer/maxAnswer circuit breakers,Liquidation DoS due to blacklisting,No longer needed according to Chainlink,oracle minAnswer,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99",validation-642,"DUPE-LiquidationLogic-001,DUPE-PriceFeed-001",DUPE-LiquidationLogic-001,DUPE-PriceFeed-001,
Satisfactory,findings-39,"When a vault is being liquidated, the remaining margin may fail to transfer to original trader due to USDT blocklist",Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,validation-625,DUPE-LiquidationLogic-001,,,
Satisfactory,findings-42,Vaults can become immune from liquidation by setting `vault.recipient` to a blacklisted quote token address,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,validation-625,DUPE-LiquidationLogic-001,,,
Satisfactory,findings-6,Liquidate process may be reverted because of USDC's blacklist,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L100,validation-625,DUPE-LiquidationLogic-001,,,
Satisfactory,findings-9,Liquidators may get more profits than expected,Gaming the liquidation mechanism,Intended design,partial liquidation,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,findings-9,DUPE-LiquidationLogic-001,,,
Satisfactory,validation-118,No grace period applied to liquidations which then makes users unfairly liquidated in the case where the sequencer goes down and just comes back up,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,did not explain how the order can affect twap,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-466,"DUPE-LiquidationLogic-001,DUPE-PriceFeed-001",DUPE-LiquidationLogic-001,DUPE-PriceFeed-001,
Satisfactory,validation-208,Malicious user can prevent themselves from been liquidated by setting `vault.recipient` to a blacklisted account,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,validation-625,DUPE-LiquidationLogic-001,,,
Satisfactory,validation-274,USDC and USDT positions can not be liquidated if recipient gets blacklisted,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,malicious pair,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L313-L319,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L313-L319",validation-625,"DUPE-LiquidationLogic-001,DUPE-PredyPool-005",DUPE-LiquidationLogic-001,DUPE-PredyPool-005,
Satisfactory,validation-275,It Will Be Close To Impossible To Liquidate User,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,validation-625,DUPE-LiquidationLogic-001,,,
Satisfactory,validation-284,Users Can Avoid Liquidation by Updating Recipient to a Blacklisted Address,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L289,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L289",validation-625,"DUPE-LiquidationLogic-001,DUPE-PredyPool-006",DUPE-LiquidationLogic-001,DUPE-PredyPool-006,
Satisfactory,validation-295,safeTransfer may lead to liquidation dos,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,validation-625,DUPE-LiquidationLogic-001,,,
Satisfactory,validation-333,`vault.recipient`  USDC blacklisted accounts will revert and cause denial of service (DOS).,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,precision,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,validation-625,DUPE-LiquidationLogic-001,,,
Satisfactory,validation-335,Liquidators can bypass remaining negative margin check and leave the loss to the protocol,Gaming the liquidation mechanism,Intended design,precision,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89-L108,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,findings-9,DUPE-LiquidationLogic-001,,,
Satisfactory,validation-339,Vault owner can pass blacklisted recipient and block the liquidations,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,"revertPairStatus makes this report invalid
 related to validation #211",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L119,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L119,validation-625,DUPE-LiquidationLogic-001,,,
Satisfactory,validation-393,Trader can avoid Liquidation of unhealthy position by entering a blacklist,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,negative tick,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L57,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L57",validation-625,"DUPE-LiquidationLogic-001,DUPE-LiquidationLogic-001",DUPE-LiquidationLogic-001,DUPE-LiquidationLogic-001,
Satisfactory,validation-396,Denial of service in liquidation process in `LiquidationLogic.sol::liquidate` if the recipient address is blacklisted in certain tokens or the tokens are paused.,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,negative tick,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39",validation-625,"DUPE-LiquidationLogic-001,DUPE-LiquidationLogic-001",DUPE-LiquidationLogic-001,DUPE-LiquidationLogic-001,
Satisfactory,validation-449,User can prevent himself for being liquidated,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,oracle pyth,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L286,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L286",validation-625,"DUPE-LiquidationLogic-001,DUPE-PredyPool-007",DUPE-LiquidationLogic-001,DUPE-PredyPool-007,
Satisfactory,validation-463,A malicious trader can cause liquidation to fail in blacklist tokens like USDC.,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,validation-625,DUPE-LiquidationLogic-001,,,
Satisfactory,validation-466,"No grace time for traders when L2 sequencers come online after being down, making them prone to liquidations",No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58",validation-466,"DUPE-LiquidationLogic-001,DUPE-PriceFeed-001",DUPE-LiquidationLogic-001,DUPE-PriceFeed-001,
Satisfactory,validation-479,Risk of Failing Liquidation Due to Blacklisted Recipient,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39",validation-625,"DUPE-LiquidationLogic-001,DUPE-LiquidationLogic-001",DUPE-LiquidationLogic-001,DUPE-LiquidationLogic-001,
Satisfactory,validation-481,Protocol could lose funds if a trader gets blacklisted and liquidation fails,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L119,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L119,validation-625,DUPE-LiquidationLogic-001,,,
Satisfactory,validation-549,Liquidation issues caused by blacklisted recipients,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39",validation-625,"DUPE-LiquidationLogic-001,DUPE-LiquidationLogic-001",DUPE-LiquidationLogic-001,DUPE-LiquidationLogic-001,
Satisfactory,validation-562,Vaults with blacklisted recipients cannot be completely liquidated resulting in bad debt persisting in system,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L102-L102,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L102-L102",validation-625,"DUPE-LiquidationLogic-001,DUPE-LiquidationLogic-001",DUPE-LiquidationLogic-001,DUPE-LiquidationLogic-001,
Satisfactory,validation-604,During partial liquidation protocol is left with bed debt that liquidator is not forced to paid up.,Gaming the liquidation mechanism,Intended design,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89-L89,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,findings-9,DUPE-LiquidationLogic-001,,,
Satisfactory,validation-625,Potential failure in liquidation process due to blacklisted recipients,Liquidation DoS due to blacklisting,Blacklisting makes liquidation insolvent,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,validation-625,DUPE-LiquidationLogic-001,,,
Satisfactory,validation-429,Impact of Pausable ERC20 Tokens on Liquidation Logic,Pausable behavior is OOS,Blacklisting makes liquidation insolvent,oracle minAnswer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L313,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L313",validation-639,"DUPE-LiquidationLogic-001,DUPE-PredyPool-005",DUPE-LiquidationLogic-001,DUPE-PredyPool-005,
Satisfactory,validation-639,Pausable Tokens like USDC can cause liquidation to Fail,Pausable behaviors are OOS,Blacklisting makes liquidation insolvent,swap deadline,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,validation-639,DUPE-LiquidationLogic-001,,,
Satisfactory,validation-116,A dangerous vault would be perceived as _not dangerous_ due to implementation of lagging prices being used in protocol when validating the danger zones of positions,Invalid. TWAP window is a design decision,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,no loss,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L129-L149,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L129-L149,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L129-L149,findings-31,DUPE-LiquidationLogic-002,,,
Satisfactory,validation-239,Use of `slot0`  in perp.sol can lead to manipulation of reallocation,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L206,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L206",validation-4,"DUPE-Perp-001,DUPE-UniHelper-001",DUPE-Perp-001,DUPE-UniHelper-001,
Satisfactory,validation-246,"Reallocation depends on the slot0 price, which can be manipulated.",slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L206,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L206",validation-4,"DUPE-Perp-001,DUPE-UniHelper-001",DUPE-Perp-001,DUPE-UniHelper-001,
Satisfactory,validation-268,Usage of slot0 to get sqrtPrice can lead to price manipulation.,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L206,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L206",validation-4,"DUPE-Perp-001,DUPE-UniHelper-001",DUPE-Perp-001,DUPE-UniHelper-001,
Satisfactory,validation-286,Manipulation via `slot0`,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L206,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L206",validation-4,"DUPE-Perp-001,DUPE-UniHelper-001",DUPE-Perp-001,DUPE-UniHelper-001,
Satisfactory,validation-372,Use of `slot0` to get `sqrtPriceLimitX96` can lead to price manipulation,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L206,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L206",validation-4,"DUPE-Perp-001,DUPE-UniHelper-001",DUPE-Perp-001,DUPE-UniHelper-001,
Satisfactory,validation-417,Price calculation susceptible to flashloan attacks,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,O(N) remove,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L202,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L202",validation-4,"DUPE-Perp-001,DUPE-UniHelper-001",DUPE-Perp-001,DUPE-UniHelper-001,
Satisfactory,validation-130,Protocol implements a disparity when validating the stop prices which would lead to valid instances to be perceived as invalid and vice versa.,Incomplete range validation,Insufficient proof (devoid of concrete example),,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L161-L173,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L138-L177,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L138-L176,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L138-L177,validation-130,DUPE-PerpMarketLib-001,,,
Satisfactory,validation-465,Incomplete Price Range Validation in `validateStopPrice` Function,Incomplete range validation,Insufficient proof (devoid of concrete example),oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L161-L173,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L138-L176,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L138-L176,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L138-L176,validation-130,DUPE-PerpMarketLib-001,,,
Satisfactory,validation-590,Incorrect calculation of decayedSlippageTorelance,Inconsistency in units of upper bound price,Insufficient proof (devoid of concrete example),"reallocate several pairs have same range, all liquidities will be reallocated",https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L161,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L161,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L161,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L161,validation-590,DUPE-PerpMarketLib-001,,,
Satisfactory,validation-217,Short-circuited evaluation in limit-stop order validation for PerpMarket can lead to unintended order execution,Incorrect logic clause when validating orders,Conditional leaks,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100C15-L101C104,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L97-L105,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L99-L104,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100C15-L101C104,validation-280,DUPE-PerpMarketLib-002,,,
Satisfactory,validation-280,Limit Price Can Be Bypassed,Incorrect logic clause when validating orders,Conditional leaks,non elaborative,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100C15-L101C104,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L101,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100-L101,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100C15-L101C104,validation-280,DUPE-PerpMarketLib-002,,,
Satisfactory,validation-129,Trades having both `limit & stop` orders are wrongly validated,Incorrect logic clause when validating orders,Conditional leaks,extreme number,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100C15-L101C104,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L80-L117,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L100-L101,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L80-L117,validation-280,DUPE-PerpMarketLib-002,,,
Satisfactory,validation-524,Validation Failure in `SlippageLib.checkPrice`,Ratio of oracle price and stop price incorrectly computed,Inconsequential and trivial refactoring on the intended conditionals,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L179C8-L181C10,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L178-L180,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/SlippageLib.sol#L35-L42,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/SlippageLib.sol#L35-L42,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L179C8-L181C10",validation-524,"DUPE-PerpMarketLib-003,DUPE-SlippageLib-001",DUPE-PerpMarketLib-003,DUPE-SlippageLib-001,
Satisfactory,findings-17,signature replay to steal traders' fund via permit2,"Seems like the ""to"" parameter is not part of the hash to verify",Informational,sig replay,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L314C5-L338C6,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L327-L338,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L327-L338,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L314C5-L338C6,findings-17,DUPE-PerpMarketV1-001,,,
Satisfactory,validation-666,No check if Arbitrum L2 sequencer is down in Chainlink feeds,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,update rate first,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L141,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L141,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-466,"DUPE-PositionCalculator-001,DUPE-PriceFeed-001",DUPE-PositionCalculator-001,DUPE-PriceFeed-001,
Satisfactory,findings-12,The interest rate is not updated before changing the pair's IRM parameters,Interest rate is not updated before changing parameters,Missing accrued fee calculation prior to fee update,update rate first,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,findings-12,DUPE-PredyPool-001,,,
Satisfactory,findings-8,Lack of timely update interest in updateIRMParams,Interest rate is not updated before changing parameters,Missing accrued fee calculation prior to fee update,update rate first,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,findings-12,DUPE-PredyPool-001,,,
Satisfactory,validation-281,updateIRMParams wrongly charges past borrows extra fees,Interest rate is not updated before changing parameters,Missing accrued fee calculation prior to fee update,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,findings-12,DUPE-PredyPool-001,,,
Satisfactory,validation-356,Interest accrued should be computed and updated based on old rate before IRM rates are updated by pool owner,Interest rate is not updated before changing parameters,Missing accrued fee calculation prior to fee update,decimalsDiff should get this value from oracle,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,findings-12,DUPE-PredyPool-001,,,
Satisfactory,validation-112,The `PredyPool.sol#initialize()` function is vulnerable to front running attack.,"Implementation contracts can be initialized. Seems QA, this can be solved in deployment.",L-6 from Analyzer,"input validation, feature improvement",https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L70-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68",validation-249,"DUPE-PredyPool-002,DUPE-PredyPool-002",DUPE-PredyPool-002,DUPE-PredyPool-002,
Satisfactory,validation-186,Missing disableInitializer call in the constructor,"Implementation contracts can be initialized. Seems QA, this can be solved in deployment.",L-6 from Analyzer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,validation-249,DUPE-PredyPool-002,,,
Satisfactory,validation-249,Uninitialized Implementation Contracts are not Completely Protected,"Implementation contracts can be initialized. Seems QA, this can be solved in deployment.",L-6 from Analyzer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,validation-249,DUPE-PredyPool-002,,,
Satisfactory,validation-360,Missing disableInitializer in Constructor of Implementation Contract,"Implementation contracts can be initialized. Seems QA, this can be solved in deployment.",L-6 from Analyzer,dust fee,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,validation-249,DUPE-PredyPool-002,,,
Satisfactory,validation-40,Add default constructor that calls `_disableInitializers()` to upgradable contracts.,"Implementation contracts can be initialized. Seems QA, this can be solved in deployment.",L-6 from Analyzer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,validation-249,DUPE-PredyPool-002,,,
Satisfactory,validation-560,No protection of uninitialized implementation contracts from an attacker,"Implementation contracts can be initialized. Seems QA, this can be solved in deployment.",L-6 from Analyzer,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,validation-249,DUPE-PredyPool-002,,,
Satisfactory,validation-621,Unprotected Uninitialized Implementation Contract,"Implementation contracts can be initialized. Seems QA, this can be solved in deployment.",L-6 from Analyzer,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,validation-249,DUPE-PredyPool-002,,,
Satisfactory,findings-25,Lack of slippage controls in supply() & withdraw() functions,Lack of slippage protection. Seems QA as it is a feature request,Non-frontrunning slippage,slippage supply/withdraw,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L22-L44,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222","https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L22-L44",findings-25,"DUPE-PredyPool-003,DUPE-PredyPool-004,DUPE-SupplyLogic-001",DUPE-PredyPool-003,DUPE-PredyPool-004,DUPE-SupplyLogic-001
Satisfactory,findings-4,supply/withdraw lack slippage protection,Lack of slippage protection. Seems QA as it is a feature request,Non-frontrunning slippage,slippage supply/withdraw,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L22,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222","https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L22",findings-25,"DUPE-PredyPool-003,DUPE-PredyPool-004,DUPE-SupplyLogic-001",DUPE-PredyPool-003,DUPE-PredyPool-004,DUPE-SupplyLogic-001
Satisfactory,validation-175,Missing Slippage Protection in the Supply Function,Lack of slippage protection. Seems QA as it is a feature request,Non-frontrunning slippage,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237",https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237",findings-25,"DUPE-PredyPool-003,DUPE-PredyPool-004",DUPE-PredyPool-003,DUPE-PredyPool-004,
Satisfactory,validation-584,No slippage control for supply and withdraw functions in `PredyPool`,Lack of slippage protection. Seems QA as it is a feature request,Non-frontrunning slippage,pyth math,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237",https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222","https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222",findings-25,"DUPE-PredyPool-003,DUPE-PredyPool-004",DUPE-PredyPool-003,DUPE-PredyPool-004,
Satisfactory,validation-631,supply and withdraw method lacks slippage mechanism,Lack of slippage protection. Seems QA as it is a feature request,Non-frontrunning slippage,swap deadline,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237",https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222","https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222",findings-25,"DUPE-PredyPool-003,DUPE-PredyPool-004",DUPE-PredyPool-003,DUPE-PredyPool-004,
Satisfactory,validation-521,Use of slot0 to get `sqrtPriceX96` before performing swaps,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L346,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L346",validation-4,"DUPE-PredyPool-008,DUPE-UniHelper-001",DUPE-PredyPool-008,DUPE-UniHelper-001,
Satisfactory,validation-660,"Spot price is used for in-range liquidity reallocation, resulting in liquidity manipulation",slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,uninitialized Impl,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L251-L257,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L251-L257",validation-4,"DUPE-PredyPool-009,DUPE-UniHelper-001",DUPE-PredyPool-009,DUPE-UniHelper-001,
Satisfactory,findings-13,PriceFeed.sol doesn't check if chainlink price is stale,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,findings-14,PriceFeed.sol doesn't check if chainlink price is min/max,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,oracle minAnswer,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-642,DUPE-PriceFeed-001,,,
Satisfactory,findings-21,PriceFeed did not perform a health check when obtaining prices from Aggregator,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,oracle quote token,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,findings-22,PriceFeed does not return to the correct price for quote pairs,Price feed does not consider different scale values for decimalDiff,Impractical fix,decimalsDiff negative,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L29-L59,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L32,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L55","https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L29-L59,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L55",findings-22,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,findings-29,Chainlink aggregator does not check for stale price,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-122,`PriceFeed#getSqrtPrice()` query to `latestRoundData()` would return stale/incorrect results,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-145,Pyth's price confidence interval not checked,Not consuming Pyth safely. Confidence interval,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,admin mistake,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,findings-31,DUPE-PriceFeed-001,,,
Satisfactory,validation-149,Chainlink price is used without checking validity,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L19,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L19,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-244,"DUPE-PriceFeed-001,DUPE-PriceFeed-003",DUPE-PriceFeed-001,DUPE-PriceFeed-003,
Satisfactory,validation-180,`PriceFeed.sol` is missing check for liveness of price data from Chainlink,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L59,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L59,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-234,Price feed for the quote token is not sufficiently validated and can return stale price,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-235,Lack of price confidence verification in Pyth oracle data,Not consuming Pyth safely. Confidence interval,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,findings-31,DUPE-PriceFeed-001,,,
Satisfactory,validation-240,No check if Arbitrum L2 sequencer is down in Chainlink feeds,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,not used when create the pair or vault,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-466,DUPE-PriceFeed-001,,,
Satisfactory,validation-241,Chainlink's latestRoundData might return stale price,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-244,Chainlink's `latestRoundData` might return stale or incorrect results,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,big risk in doing this,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-245,Chainlink's `latestRoundData()` might return stale results leading to imprecise price square root calculations,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-251,Chainlink price feed output is not sufficiently validated and can return stale price,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-253,latestRoundData might return stale results,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,initializeLock(),https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-254,Risk of Incorrect Asset Pricing by Oracle Datafeed in Case of Underlying Aggregator Reaching `minAnswer`,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,intended behavior,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-642,DUPE-PriceFeed-001,,,
Satisfactory,validation-29,Chainlink price staleness is not validated from `latestRoundData()` function call,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-30,Missing check for L2(Arbitrum/Optimism) sequencer is active or down for chainlink feed.,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-466,DUPE-PriceFeed-001,,,
Satisfactory,validation-313,Not Checking For Down L2 Sequencer,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,liq buffer feature improvement,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-466,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-314,Chainlink's `latestRoundData` might return stale or incorrect results,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,"liq DOS recipient can revert for token, only if the token is 777",https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-244,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-329,No check if Arbitrum L2 sequencer is down in Chainlink feeds,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,precision,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-466,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-347,Lack of validation of `latestRoundData` could lead to stale prices,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,2 Pyth price,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-361,Stale Prices could be returned,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-362,Missing Checks for Minimum and Maximum Prices in `getSqrtPrice`,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-642,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-364,`VALID_TIME_PERIOD` not sufficient for staleness check,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-244,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-368,Unhandled chainlink revert would lock all price oracle access,DoS due to not being able to change oracles,Low QA. There's no fallback oracle entailed anyway,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-520,DUPE-PriceFeed-001,,,
Satisfactory,validation-369,Unchecked Chainlink's latestRoundData may return stale price which impacts the price feed result,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-370,Missing check for active sequencer,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-466,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-371,Unhandled Oracles revert in `PriceFeed.sol` may result in Denial-of-Service,DoS due to not being able to change oracles,Low QA. There's no fallback oracle entailed anyway,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-520,DUPE-PriceFeed-001,,,
Satisfactory,validation-373,Incorrect decimalsDiff input could lead to incorrect result of `PriceFeed:getSqrtPrice`,Decimal diff should queried rather than passed as a value. Seems more like user mistake.,Low QA on admin input mistake,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18-L24,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18-L24,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L29-L58","https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18-L24,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L29-L58",validation-373,"DUPE-PriceFeed-001,DUPE-PriceFeed-003",DUPE-PriceFeed-001,DUPE-PriceFeed-003,
Satisfactory,validation-375,Chainlink price feed is not validated and hence returns stale price,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-379,Missing checks for Chainlink feed data leads to wrong calculation of the baseToken's square root price in quoteToken,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-39,Chainlink's latestRoundData() might return stale or incorrect results on PriceFeed#`getSqrtPrice`.,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-399,Missing L2 sequencer checks for Chainlink oracle,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,negative tick,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-466,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-41,Lack of Stale Data Check in `getSqrtPrice` Function Can Lead to Incorrect Price Calculations,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-434,`latestRoundData()` Call May Result Stale,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,oracle minAnswer,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46-L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46-L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-464,No check if Arbitrum L2 sequencer is down in Chainlink feeds. Can lead to incorrect prices being consumed.,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-466,DUPE-PriceFeed-001,,,
Satisfactory,validation-471,`PriceFeed::getSqrtPrice()` may return wrong/stale prices,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L59,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L59,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-475,`PriceFeed#getSqrtPrice()` incorrectly integrates with the Pyth oracle due to only considering expo == `-8` as valid prices,Pyth only works with decimals == 8,Lacking concrete example to elicit the flaw,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L50,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-475,DUPE-PriceFeed-001,,,
Satisfactory,validation-484,UniV3 twap Oracle unsafe on L2s in event of Sequencer downtime,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L37,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L37,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-466,"DUPE-PriceFeed-001,DUPE-UniHelper-001",DUPE-PriceFeed-001,DUPE-UniHelper-001,
Satisfactory,validation-486,No check for whether the price range returned by Pyth is accurate and thus inaccurate price range will be consumed.,Not consuming Pyth safely. Confidence interval,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,findings-31,DUPE-PriceFeed-001,,,
Satisfactory,validation-520,Chainlink price feed address should not be immutable,DoS due to not being able to change oracles,Informational,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L30,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L30,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L30,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-520,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-532,ChainlinkOracle will return the wrong price for asset if underlying aggregator hits minAnswer,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-642,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-536,`latestRoundData()` has no check for round completeness,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-244,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-539,Lack of price freshness check in 'PriceFeed' allows a stale price to be used,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L28-L59,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L28-L59,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-541,No check if Arbitrum L2 sequencer is down in Chainlink feeds,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-466,DUPE-PriceFeed-001,,,
Satisfactory,validation-55,No check for `getSqrtPrice()` to handle Arbitrum L2 sequencer outages in chainlink feeds.,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-466,DUPE-PriceFeed-001,,,
Satisfactory,validation-56,calls to Chainlink's `latestRoundData` can return stale or incorrect result,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-568,The staleness of the quote token price is not checked,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-244,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-57,Chainlink Oracle priceFeed Data May Return Stale Prices,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,input validation data range,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L44-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L44-L58,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-571,The Chainlink price feed's input is not properly validated,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-574,quoteAnswer unchecked for stale price or min answer,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,partial liquidation,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L44-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L44-L58,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-591,Calls to Chainlink oracles don't check for stale prices.,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,relocationOccurred return wrong variable,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46-L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46-L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-592,Missing checks for whether Sequencer is active.,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,reuse positionId,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-466,DUPE-PriceFeed-001,,,
Satisfactory,validation-596,Chainlink's `latestRoundData` might return stale or incorrect results,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,slippage inconsistant,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L59,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L59,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-597,Vulnerability to Stale Data in callUniswapObserve Function Due to Sequencer Downtime on Layer 2 Solutions,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,slippage supply/withdraw,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-466,"DUPE-PriceFeed-001,DUPE-UniHelper-001",DUPE-PriceFeed-001,DUPE-UniHelper-001,
Satisfactory,validation-606,Missing staleness check in `getSqrtPrice` function using `AggregatorV3Interface`,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-608,Missing L2 Sequencer status check in `getSqrtPrice` function,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-466,DUPE-PriceFeed-001,,,
Satisfactory,validation-611,Missing `minAnswer`/`maxAnswer` check and Circuit Breaker in `getSqrtPrice` function,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-642,DUPE-PriceFeed-001,,,
Satisfactory,validation-616,Potential Risk of Incorrect Vault Liquidation Due to Stale Chainlink Price Data,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-618,Chainlink oracle will return the wrong price if the aggregator hits `minAnswer`,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-642,DUPE-PriceFeed-001,,,
Satisfactory,validation-630,Freshness of pricefeed not checked properly leads to the usage of stale pricefeeds.,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,swap deadline,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L44C1-L58C6,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L44-L58,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-633,Inconsistent Price Data Due to Sequencer Downtime and Expired Oracle Prices,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,swap deadline,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-466,"DUPE-PriceFeed-001,DUPE-PriceFeed-003",DUPE-PriceFeed-001,DUPE-PriceFeed-003,
Satisfactory,validation-637,Missing checks for whether Arbitrum Sequencer is active,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,swap deadline,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L44C1-L58C6,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L44-L58,validation-466,DUPE-PriceFeed-001,,,
Satisfactory,validation-642,Risk of Incorrect Price Feeds Due to Chainlink Oracle Circuit Breaker Activation,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,swap deadline,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-642,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-645,No check for L2 sequencer is down,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,swap deadline,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-466,DUPE-PriceFeed-001,,,
Satisfactory,validation-647,Chainlink's latestRoundData might return stale or incorrect results,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,swap deadline,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-650,Oracle data feed is insufficiently validated,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,timelock affect liquidation,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-652,Lack of Sequencer Status Validation in Chainlink Price Feed,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,"twap window hardecode 30 min, should be adjustable",https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-466,DUPE-PriceFeed-001,,,
Satisfactory,validation-658,Chainlink Price Feed Lacks Stale Checks,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,uninitialized Impl,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-244,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-661,No minAnswer/maxAnswer Circuit Breaker Checks while Querying  Prices from chainlink feed in `PriceFeed::getSqrtPrice`,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,uninitialized Impl,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-642,DUPE-PriceFeed-001,,,
Satisfactory,validation-668,ChainlinkAdapterOracle will return the bad price for asset if it hits minAnswer,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,update rate first,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-642,DUPE-PriceFeed-001,,,
Satisfactory,validation-670,Chainlink’s latestRoundData might return stale or incorrect results,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,update rate first,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-675,No check for active Arbitrum Sequencer,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,validatestopprice bp units,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46",validation-466,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-682,Aggregator of chainlink orcale will return wrong price if asste hits minimum circuit,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,validatestopprice price1 or price2,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-642,DUPE-PriceFeed-001,,,
Satisfactory,validation-74,Chainlink oracle may return stale price,Consuming chainlink safely. Staleness,Missing Chainlink staleness check and PythPriceFeed:: updatePriceFeeds call,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-75,The Chainlink Oracle lacks a check for an active Arbitrum Sequencer.,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-466,DUPE-PriceFeed-001,,,
Satisfactory,validation-76,latestRoundData() has no check for round completeness,Consuming chainlink safely. Staleness,Missing Chainlink staleness check,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-77,Chainlink oracle does not implement check against min price.,Consuming chainlink safely. Min and max values check,No longer needed according to Chainlink,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-642,DUPE-PriceFeed-001,,,
Satisfactory,validation-85,Lacking checks to determine whether the Arbitrum Sequencer is active,No check for sequencer,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,validation-466,DUPE-PriceFeed-001,,,
Satisfactory,findings-23,Some Pyth price feeds are not updated frequently / do not exist on targetted chains,Update is not an issue as it can be done by the protocol,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48",findings-31,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,findings-31,"Pyth price feed may be stale, causing PriceFeed.sol to be unusable",Update is not an issue as it can be done by the protocol,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48",findings-31,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-121,`PriceFeed#getSqrtPrice()` would be broken due to the incorrect method of integrating Pyth oracles which would also fault other core logics such as liquidations,Invalid. There is a check for staleness. Pyth oracle can be updated outside of the predy contracts execution,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,findings-31,DUPE-PriceFeed-001,,,
Satisfactory,validation-142,Pyth.getPriceNoOlderThan(...) transaction may fail if `pyth.updatePriceFeeds{ value: fee }(priceUpdate)` is not called.,Invalid,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48",findings-31,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-428,Pyth Price Feed Oracles Not Implemented Correctly Resulting in Stale Data,Pyth is fetched using not older than,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,oracle minAnswer,,https://github.com/code-423n4/predyx/blob/main/src/PriceFeed.sol#L47,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/predyx/blob/main/src/PriceFeed.sol#L47",findings-31,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-433,`latestRoundData()` Call May Result Stale,Repeated submission of 434,Missing Chainlink staleness check,oracle minAnswer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46-L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46-L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-526,Poorly inspected feeding system,Invalid,Missing Chainlink staleness check,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-623,Reversion of getSqrtPrice Function Due to getPriceNoOlderThan Oracle Call,Invalid,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,slot0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L48",findings-31,"DUPE-PriceFeed-001,DUPE-PriceFeed-001",DUPE-PriceFeed-001,DUPE-PriceFeed-001,
Satisfactory,validation-651,No check for round completeness in latestRoundData,Low quality report,Missing Chainlink staleness check,twap manipulated more like design analysis,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,validation-244,DUPE-PriceFeed-001,,,
Satisfactory,validation-656,PriceFeed : getSqrtPrice will revert due to stale price or when the price is not updated in pyth,Pyth prices are expected to be updated before they are used,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,uninitialized Impl,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,findings-31,DUPE-PriceFeed-001,,,
Satisfactory,validation-657,Pyth's `updatePriceFeeds(....)` should be called first before calling the `getPriceNoOlderThan(...)`  to get accurate price.,There is a check for staleness of pyth price,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,uninitialized Impl,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L59,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L59,findings-31,DUPE-PriceFeed-001,,,
Satisfactory,validation-664,The price calculation from Pyth price is incorrect.,Invalid,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,update fee first,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L59,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L59,findings-31,DUPE-PriceFeed-001,,,
Satisfactory,validation-523,Hardcoded `VALID_TIME_PERIOD` too large for arbitrum and allows stale prices,VALID_TIME_PERIOD should depend on the chain,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L35,findings-31,DUPE-PriceFeed-002,,,
Satisfactory,validation-303,Hardcoded `1e18` Amount Causes Issues with Non-Standard Decimal Tokens,Issues witht tokens that do not have 18 decimals,Inadequate proof to substantiate mismatch with normalization,approve 0,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L87,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L87,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L87,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L87,validation-303,DUPE-Trade-001,,,
Satisfactory,validation-474,DoS when user tries to create a delta-neutral position with tokens with decimals != 18,Issues witht tokens that do not have 18 decimals,Inadequate proof to substantiate mismatch with normalization,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L87,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L86-L90,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L87,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L86-L90,validation-303,DUPE-Trade-001,,,
Satisfactory,validation-179,Use of `slot0` to get `sqrtPrice` can lead to price manipulation.,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,< or <=,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L49-L60,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L49-L60",validation-4,"DUPE-Trade-002,DUPE-UniHelper-001",DUPE-Trade-002,DUPE-UniHelper-001,
Satisfactory,validation-344,Usage of slot0 would results to highly manipulative trade,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,1st depositer,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L49,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L49",validation-4,"DUPE-Trade-002,DUPE-UniHelper-001",DUPE-Trade-002,DUPE-UniHelper-001,
Satisfactory,validation-529,Vulnerability in `Trade` Function Due to Usage of Uniswap V3 `slot0` Price,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L32-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L32-L74",validation-4,"DUPE-Trade-002,DUPE-UniHelper-001",DUPE-Trade-002,DUPE-UniHelper-001,
Satisfactory,validation-607,Use of `slot0` to get `sqrtPriceLimitX96` can lead to price manipulation,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L32-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L32-L74",validation-4,"DUPE-Trade-002,DUPE-UniHelper-001",DUPE-Trade-002,DUPE-UniHelper-001,
Satisfactory,validation-422,Liquidity manipulation is possible when trading,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,oracle minAnswer,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L113,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L113",validation-4,"DUPE-Trade-003,DUPE-UniHelper-001",DUPE-Trade-003,DUPE-UniHelper-001,
Satisfactory,validation-468,Trades Finalize with Vulnerable Prices Due to slot0 Implementation,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L32,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Trade.sol#L32",validation-4,"DUPE-Trade-004,DUPE-UniHelper-001",DUPE-Trade-004,DUPE-UniHelper-001,
Satisfactory,findings-2,`callUniswapObserve()` will show incorrect price for negative ticks cause it doesn’t round up for negative ticks,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,negative tick,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35-#L66,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70",validation-285,"DUPE-UniHelper-001,DUPE-UniHelper-001",DUPE-UniHelper-001,DUPE-UniHelper-001,
Satisfactory,validation-117,`UniHelper#getSqrtTWAP()` would return the wrong prices for negative tick deltas since it doesn't round down for them,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L20-L23,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L20-L23",validation-285,"DUPE-UniHelper-001,DUPE-UniHelper-001",DUPE-UniHelper-001,DUPE-UniHelper-001,
Satisfactory,validation-259,callUniswapObserve may return incorrect price for negative ticks cause it doesn't round up for negative ticks,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35-L66,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70",validation-285,"DUPE-UniHelper-001,DUPE-UniHelper-001",DUPE-UniHelper-001,DUPE-UniHelper-001,
Satisfactory,validation-285,Negative Tick Rounding raises price of asset,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L72,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70",validation-285,"DUPE-UniHelper-001,DUPE-UniHelper-001",DUPE-UniHelper-001,DUPE-UniHelper-001,
Satisfactory,validation-294,`callUniswapObserve` doesn't round up for negative ticks which will lead to wrong price being returned,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35",validation-285,"DUPE-UniHelper-001,DUPE-UniHelper-001",DUPE-UniHelper-001,DUPE-UniHelper-001,
Satisfactory,validation-337,UniHelper::getSqrtTWAP will show incorrect price for negative tick deltas in current implementation cause it doesn't round up for them,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,sig replay nonce in OrderInfo,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35-L66,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70",validation-285,"DUPE-UniHelper-001,DUPE-UniHelper-001",DUPE-UniHelper-001,DUPE-UniHelper-001,
Satisfactory,validation-342,Incorrect price would return when tick is negative,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,1st depositer,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,validation-285,DUPE-UniHelper-001,,,
Satisfactory,validation-392,Uniswap doesn't round for negative ticks affecting important functions,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,negative tick,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,validation-285,DUPE-UniHelper-001,,,
Satisfactory,validation-439,`callUniswapObserve(...)` will return a wrong price for negative tick because negative values of tick are not rounded,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,oracle minAnswer,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,validation-285,DUPE-UniHelper-001,,,
Satisfactory,validation-480,callUniswapObserve()  returns wrong price when tick is negative,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L69-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L75,validation-285,DUPE-UniHelper-001,,,
Satisfactory,validation-505,`callUniswapObserve()` will give an incorrect price calculation for negative ticks because it doesn't round up for negative value.,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35-L75,validation-285,DUPE-UniHelper-001,,,
Satisfactory,validation-537,`getSqrtTWAP()` will show incorrect price for negative tick deltas in current implementation,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L20-L22,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L20-L22",validation-285,"DUPE-UniHelper-001,DUPE-UniHelper-001",DUPE-UniHelper-001,DUPE-UniHelper-001,
Satisfactory,validation-576,"TWAP price unused in multiple places, enabling the manipulation of prices.",slot0 is easy to manipulate,Insufficient proof and informational at best,partial liquidation,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L36,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L36,validation-4,DUPE-UniHelper-001,,,
Satisfactory,validation-578,incorrect price for negative ticks due to lack of rounding down,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,partial liquidation,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L56-L73,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,validation-285,DUPE-UniHelper-001,,,
Satisfactory,validation-589,Incorrect Handling of Negative Tick Deltas in callUniswapObserve Function Leading to Mispricing,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,"reallocate several pairs have same range, all liquidities will be reallocated",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,validation-285,DUPE-UniHelper-001,,,
Satisfactory,validation-598,Use of `slot0` to get `sqrtPrice` can lead to price manipulation.,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,slippage supply/withdraw,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,validation-4,DUPE-UniHelper-001,,,
Satisfactory,validation-649,Incorrect Handling of Negative Tick Deltas in TWAP Calculation,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,swapExactIn payable seems intended,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35-L66,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70",validation-285,"DUPE-UniHelper-001,DUPE-UniHelper-001",DUPE-UniHelper-001,DUPE-UniHelper-001,
Satisfactory,validation-653,Usage of slot0 is extremely easy to manipulate,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,uninitialized Impl,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,validation-4,DUPE-UniHelper-001,,,
Satisfactory,validation-82,Incorrect prices will be returned for negative ticks.,Incorrect handling of negative ticks,Incorrect rounding of negative ticks,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L36-L74,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35-L75,validation-285,DUPE-UniHelper-001,,,
Satisfactory,validation-125,UniHelper.getSqrtTWAP() ingests heavily manipulatable data in some instances,Report is not clear,Should call PythPriceFeed:: updatePriceFeeds function before reading the price feed,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L20-L23,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L20-L23,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L20-L23,findings-31,DUPE-UniHelper-001,,,
Satisfactory,validation-355,Slot 0 manipulation,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,decimal hardcode,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,validation-4,DUPE-UniHelper-002,,,
Satisfactory,validation-397,Use of `slot0` to get `sqrtPriceLimitX96` can lead to price manipulation.,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,negative tick,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L14,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,validation-4,DUPE-UniHelper-002,,,
Satisfactory,validation-4,UniswapV3 slot0 should not be used to get price as it can be manipulated.,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L14,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,validation-4,DUPE-UniHelper-002,,,
Satisfactory,validation-403,Using slot0 for `sqrtPrice` in order to `calculateStableAmount` could lead to price manipulation,slot0 is easy to manipulate,Readme: Non-atomic sandwich price manipulation,negative tick,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L14,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L13-L15,validation-4,DUPE-UniHelper-002,,,
Satisfactory,validation-207,Using `block.timestamp` as `deadline` for swap allows the transaction to be held indefinitely till it incurs maximum slippage loss,block.timestamp is an invalid deadline,Infeasible in POS,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L50,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,
Satisfactory,validation-247,Missing deadline checks allow pending transactions to be maliciously executed,block.timestamp is an invalid deadline,Infeasible in POS,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L34,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,
Satisfactory,validation-331,Passing `block.timestamp` as the swap expiry/deadline parameter allows MEV.,block.timestamp is an invalid deadline,Infeasible in POS,precision,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L34-L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,
Satisfactory,validation-378,Dangerous use of deadline parameter,block.timestamp is an invalid deadline,Infeasible in POS,erc20 pause/blacklist,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L34,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,
Satisfactory,validation-408,Using `block.timestamp` for swap deadline offers no protection,block.timestamp is an invalid deadline,Infeasible in POS,negative tick,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001
Satisfactory,validation-410,"Improper use of deadline parameter, result in token swap at a unfavourable price",block.timestamp is an invalid deadline,Infeasible in POS,negative tick,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001
Satisfactory,validation-432,Interactions with AMMs do not use deadlines for operations,block.timestamp is an invalid deadline,Infeasible in POS (Readme: Front-running via insufficient slippage specification is out of scope),oracle minAnswer,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L50-L50,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,
Satisfactory,validation-469,Lack of deadlines in swaps exposes vulnerabilities to potentially malicious executions.,block.timestamp is an invalid deadline,Infeasible in POS,oracle sequencer,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001
Satisfactory,validation-556,Missing deadlines in swap functions,block.timestamp is an invalid deadline,Inadequate elaboration,oracle stale,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,
Satisfactory,validation-577,No expiration deadline leads to losing a lot of funds,block.timestamp is an invalid deadline,Inadequate elaboration,partial liquidation,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L34,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,
Satisfactory,validation-58,Dangerous use of deadline parameter in swapExactIn and swapExactOut,block.timestamp is an invalid deadline,Infeasible in POS,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,
Satisfactory,validation-582,BLOCK.TIMESTAMP IS USED TO SET THE SWAP DEADLINE,block.timestamp is an invalid deadline,Infeasible in POS,"price movement formula cannot achieve the doc specs, but when the bps value is close to 1, the err is small","https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,
Satisfactory,validation-87,Using `block.timestamp` for swap deadline offers no protection,block.timestamp is an invalid deadline,Infeasible in POS,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L49-L51,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L33-L35",validation-87,"DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001",DUPE-UniswapSettlement-001,DUPE-UniswapSettlement-001,
Unsatisfactory,findings-16,"It is possible to block stablecoin (USDC, USDT) swaps in the UniswapSettlement contract",Liquidation DoS due to blacklisting,L-1 from Analyzer,"approve 0 reset after swap
 4naly3er L-1",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L47,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99",,,,,
Unsatisfactory,validation-105,Missing of the Duplicate Check in `AddPairLogic.sol#addPair()` function,Lack of check for already added pool,Low QA. It's pairId that matters,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L53-L94,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L53-L94,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L53-L94,,,,,
Unsatisfactory,validation-106,Imprecise calculations in PriceFeed.sol::getSqrtPrice lead to loss of precision,Precision loss. Seems QA. Lack of evidence for meaningful impact,Low QA devoid of concrete example,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120",https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120",,,,,
Unsatisfactory,validation-124,Attempts at liquidation could revert due to an Underflow in `PositionCalculator.calculateMinMargin`,QA at best.,Intended design,debt is deducted,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L95,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L75-L86,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L75-L86,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L95",,,,,
Unsatisfactory,validation-127,An attacker can always make `PerpMarketV1# predyTradeAfterCallback()` to revert,Front-run permit signatures,Insufficient proof eliciting the flaws,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L330,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L102-L142,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L102-L142,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L330",,,,,
Unsatisfactory,validation-139,Division before multiplication in `Reallocation::calculateUsableTick` function could `result` been zero,Precision loss. Seems QA. Lack of evidence for meaningful impact,result >> tickSpacing to determine discrete number of tickSpacing,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L109-L121,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L109-L121,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55",,,,,
Unsatisfactory,validation-14,Divide Before Multiply : 3 Occurrences,Precision loss. Seems QA. Lack of evidence for meaningful impact,Low QA devoid of concrete example,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L109-L121,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L109-L121,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55",,,,,
Unsatisfactory,validation-177,Cross-chain signature replay attacks,Cross-chain replay. Protocol want to deploy en different chains,Low QA similar to L-7 from Analyzer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/orders/OrderInfoLib.sol#L19,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/orders/OrderInfoLib.sol#L18,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/orders/OrderInfoLib.sol#L18,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/orders/OrderInfoLib.sol#L19",,,,,
Unsatisfactory,validation-20,"Performs a multiplication on the result of a division, resulting in a loss of precision.",Precision loss. Seems QA. Lack of evidence for meaningful impact,Low QA devoid of concrete example,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120",https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120",,,,,
Unsatisfactory,validation-261,Incorrect Assignment of Token Roles in `addPair` Function,Incorrect order of tokens,Incorrect assumptions,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L76,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L76,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L76,,,,,
Unsatisfactory,validation-277,TWAP Lag Leads to Delayed Liquidations,TWAP window should not be hardcoded,Known risk per readme,not used when create the pair or vault,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L11,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L11,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L11,,,,,
Unsatisfactory,validation-311,Potential Zero Rounding Issue in Settlement Calculation Due to Integer Division,Precision loss due to high value low decimal tokens suchas wbtc. PoC might have unrealistic values,Similar to L-9 from Analyzer,lib diff decimal non elaborative report,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L195,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L101,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L101,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L195",,,,,
Unsatisfactory,validation-341,"updatePoolOwner should call withdrawCreatorRevenue, otherwise, creator fees will be given to the next owner ",QA at best,"Low QA as this requires mistake from the owner. Additionally, withdrawal is pulled instead of push",&& ||,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L157-L159,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L50-L73,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L50-L73,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L157-L159",,,,,
Unsatisfactory,validation-348,Wrong price calculation due to Division before Multiplication error,Seems QA. Lack of evidence for meaningful impact,Low QA with impractical example given,2 Pyth price,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120",https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45",,,,,
Unsatisfactory,validation-353,`realloacate` will suffer precision loss due to division before multiplication,Seems QA. Lack of evidence for meaningful impact,Low QA devoid of example given,decimal hardcode,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120",https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L225,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L225",,,,,
Unsatisfactory,validation-374,Loss of protocol fees due to precision issue.,"Dust due to rounding. Seems QA, round loss is capped at 1",Informational,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L71C8-L72C70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L72,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L71C8-L72C70,,,,,
Unsatisfactory,validation-381,Significant revenue loss due to round off error (accumulatedProtocolRevenue and accumulatedCreatorRevenue),Precision loss due to high value low decimal tokens suchas wbtc. PoC might have unrealistic values,Informational,erc20 pause/blacklist,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L195,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L195,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L195,,,,,
Unsatisfactory,validation-451,`finalBurnAmount` in `ScaledAsset::removeAsset` should be rounded up so it is in favor of the protocol,Round in favor of the protocol. Seems QA report does not give any meaningful impact,Informational,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L57,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L47,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L47,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L57",,,,,
Unsatisfactory,validation-473,"The first created vault will have an id 0, which will be innacessible as when passing an id of 0 it means that a new vault will be created",First vault is assigned an invalid id,Insufficient proof to elicit the flaws,oracle sequencer,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/VaultLib.sol#L31-L46,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L276,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L276,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/VaultLib.sol#L31-L46",,,,,
Unsatisfactory,validation-485,Valid Pairs Incorrectly Marked as Invalid,Off by one edge case. Seems QA,Inadequate proof and elaboration,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/types/GlobalData.sol#L26-L33,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L32,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L32,https://github.com/code-423n4/2024-05-predy/blob/main/src/types/GlobalData.sol#L26-L33",,,,,
Unsatisfactory,validation-511,Signature Replay Attack in `GammaTradeMarketL2::executeTradeL2` Function Due to Missing `chainId`,Cross-chain replay. Protocol want to deploy en different chains,Low QA similar to L-7 from Analyzer,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/orders/OrderInfoLib.sol#L19,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketL2.sol#L42,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L327-L338,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketL2.sol#L42,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/orders/OrderInfoLib.sol#L19,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L327-L338",,,,,
Unsatisfactory,validation-555,Attacker can modify position (hedge or close) of any user,anyone can update trader position without consent,Incorrect assumptions and insufficient proof,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketL2.sol#L81,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketL2.sol#L81,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketL2.sol#L81,,,,,
Unsatisfactory,validation-566,Incorrect Validation Logic for Vault and Pair IDs in GlobalDataLibrary,Off by one edge case. Seems QA,Inadequate proof and elaboration,oracle stale,https://github.com/code-423n4/2024-05-predy/blob/main/src/types/GlobalData.sol#L26-L33,https://github.com/code-423n4/2024-05-predy/blob/main/src/types/GlobalData.sol#L26-L33,,https://github.com/code-423n4/2024-05-predy/blob/main/src/types/GlobalData.sol#L26-L33,,,,,
Unsatisfactory,validation-581,Lack of Buffer in Liquidation Mechanism Increases Immediate Liquidation Risk,QA. Feature request/user mistake/design decision,Inadequate proof to substantiate the described scenario,partial liquidation,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L40,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L40,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L40,,,,,
Unsatisfactory,validation-583,applyInterestForPoolStatus : totalProtocolFee is sharing could add more since it divides the value.,"Dust due to rounding. Seems QA, round loss is capped at 1",Informational,pyth math,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L71C8-L72C70,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L50-L73,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L71C8-L72C70,,,,,
Unsatisfactory,validation-605,Immediate User Liquidation Risk,QA. Feature request/user mistake/design decision,Inadequate proof to substantiate the described scenario,slot0,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L40,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L40,,,,,
Unsatisfactory,validation-613,Division before multiplication in `price` calculation makes it susceptible to potential precision loss,Precision loss. Seems QA. Lack of evidence for meaningful impact,Low QA devoid of concrete example,slot0,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120",https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120",,,,,
Unsatisfactory,validation-626,SettlementCallbackLib : `execSettlement` will not send fee to the `predyPool` when `baseAmountDelta` is negative,Lack of validation for fee,Incorrect assumptions and insufficient proof,"stop limit revert if relate to validation #280, but not quite right",https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/spot/SpotMarket.sol#L91,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L39-L58,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L39-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/spot/SpotMarket.sol#L91",,,,,
Unsatisfactory,validation-627,Lenders are unable to withdraw complete collateral,Round in favor of the protocol. Seems QA report does not give any meaningful impact,Intended design and commonly known issues,storage collision,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L57,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L57",,,,,
Unsatisfactory,validation-632,Users can steal tokens through fees in the market,Lack of validation for fee,Inadequate proof alleging the flaws,swap deadline,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/spot/SpotMarket.sol#L91,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/spot/SpotMarket.sol#L246-L247,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/spot/SpotMarket.sol#L246-L247,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/spot/SpotMarket.sol#L91",,,,,
Unsatisfactory,validation-648,Reliance on uniswap oracle on L2's is risky as its susceptible to price manipulations,Uniswap is an unsafe oracle in L2s,Low QA on L2 Sequencer Uptime Feeds frequently reported by the bots,swapExactIn payable seems intended,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L141,,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L141,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35",,,,,
Unsatisfactory,findings-10,Liquidation process may be reverted because of slipage control,Invalid. Report only describes a design decision to be suboptimal,Intended design,liq slippage market volatility cause price deviate beyond slippage,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/SlippageLib.sol#L21-L44,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/SlippageLib.sol#L21-L44,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/SlippageLib.sol#L21-L44,,,,,
Unsatisfactory,findings-11,Gamma trading may be blocked because liquidity is reallocated.,Lack of evidence,Intended design,"reallocate several pairs have same range, all liquidities will be reallocated",,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L202-L252,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L202-L252,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L202-L252,,,,,
Unsatisfactory,findings-18,Liquidate process may be reverted because some tokens will be reverted to transfer to zero address.,Invalid. There is a list of tokens in scope,Infeasible. It's blacklisted address that's concerning,liq revert addr 0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89-L101,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89-L101,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89-L101,,,,,
Unsatisfactory,findings-19,Gamma trading may be blocked when there is not enough liquidity,Invalid,Intended design,low liquidity gamma relate to validaion#120,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L426-L453,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L426-L453,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L426-L453,,,,,
Unsatisfactory,findings-26,Reallocation incorrectly sends the exceed quoteTokens to Market contract instead of reallocator,Invalid. reallocate can be called directly by anyone,Insufficient proof,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/ReallocationLogic.sol#L69,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/ReallocationLogic.sol#L69,,,,,
Unsatisfactory,findings-27,Liquidation incorrectly tries to transfer token from Market instead of liquidator if remainingMargin is negative,Invalid. Liquidate function seems to be open to anyone,Intended design,liq msg.sender msg.sender is the Market protocol,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L106,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L106,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L106,,,,,
Unsatisfactory,findings-32,ReaderLogic.sol#getPairStatus does not update squart related fee fields for return value,Invalid,Insufficient proof,no loss,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/ReaderLogic.sol#L16-L22,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/ReaderLogic.sol#L16-L22,,,,,
Unsatisfactory,findings-33,"UniswapSettlement does not use forceApprove, and may revert when quoteToken is USDT",Bot Finding. L-1,L-1 from Analyzer,approve 0 4naly3er L-1,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L47,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,,,,,
Unsatisfactory,findings-34,Corruptible Upgradability Pattern for Market Contracts,Future code speculation,L-12 from Analyzer,gap,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L29,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L29,,,,,
Unsatisfactory,findings-35,"Centralization risk: PoolOwners have the power to lock all user funds from Market contracts, and can liquidate any account","Invalid. Role is trusted. No evidence that this breaks protocol trusted assumptions, damage is only to tha vault.",Pool owner is trusted per readme,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L300-L304,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L300-L304,,,,,
Unsatisfactory,findings-36,"The upper bound check of `riskParams` is too large, causing vault position to very likely be insolvent.",Invalid,Low QA on limit checks,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L214,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L214,,,,,
Unsatisfactory,findings-37,"When creating a new PairStatus, the IRMParams are not validated",Invalid,Low QA on validation check,"no big loss, other user can just ignore and not use it",,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L150-L151,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L150-L151,,,,,
Unsatisfactory,findings-38,"When maintaining a position in PerpMarketV1, users are not allowed to deposit extra margin to prevent their position from being liquidated.",Invalid,Insufficient proof on flaws associated with the current design,"seem it is only for this position, user's whole position is another thing",,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L128,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L128,,,,,
Unsatisfactory,findings-40,Token fees should only be calculated for when users pay off fees,Invalid. Fees are taken into account on their borrowings,Insufficient proof on flaws associated with the current design,based on DebtValue,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L69-L72,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L69-L72,,,,,
Unsatisfactory,findings-44,Users can call autoClose/autoHedge for other user position in GammaTradeMarket,Lack of evidence,Insufficient proof,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L227,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L227,,,,,
Unsatisfactory,findings-5,Possible approval revert for USDT token,Bot Finding. L-1,L-1 from Analyzer,"approve 0 reset after swap
 4naly3er L-1",,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,,,,,
Unsatisfactory,findings-7,Non-functional allowedTraders feature,Report not clear,Intended design,skip allowlist msg.sender is the market contract,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L265-L279,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L265-L279,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L265-L279,,,,,
Unsatisfactory,validation-107,Missing 2-step Transfer Ownership Pattern for poolOwner,SC rule.,Low QA frequently reported by the bots,"some token not exist on certain chain
 no loss",,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L157-L159,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L157-L159,,,,,
Unsatisfactory,validation-11,Attacker Could Withdraw Protocol Revenue using the Reentrancy Vulnerability,Invalid,Centralization devoid of actual scenario given,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L177-L191,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L177-L191,,,,,
Unsatisfactory,validation-111,Incorrect Access Control in `withdrawProtocolRevenue` and `withdrawCreatorRevenue` Functions in PredyPool Contract,Invalid. Modifier is there.,It's an admin controlled call,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L177,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L177,,,,,
Unsatisfactory,validation-113,Potential Manipulation of TWAP and Oracle Price in `PerpMarketV1.sol`,GPT,Price or oracle manipulation that is not atomic,self DOS,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L149,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L149,,,,,
Unsatisfactory,validation-115,Protocol wrongly assumes the utilization rate in some instances,Invalid. assets == 0 means no deposits,Incorrect assumptions,intended behavior,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L604-L617,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L604-L617,,,,,
Unsatisfactory,validation-119,Protocol lacks any logic for bad debt socialization which allows _malicious_ tech savvy users to game honest users on the platform since this leads to a _bank-run_ like situation,Invalid. Design analysis. This is just farming. Recommendation cannot even be proved to be sound,Low QA/Informational on an intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L57,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L57,,,,,
Unsatisfactory,validation-120," Valid liquidations would be DOS'd in some cases due to liquidity check which could then allow a _malicious_ user to ensure they are not liquidatable even if their positions are really bad, by just withdrawing some liquidity required to liquidate them from the pool",Invalid. Lack of evidence that user can easily take out all the liquidity,Intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L66-L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L66-L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L66-L68,,,,,
Unsatisfactory,validation-123,Protocol wrongly allows for liquidations to be done and dust to be left,Invalid. Design analysis. This is just farming. Recommendation cannot even be proved to be sound,Intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L119,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L119,,,,,
Unsatisfactory,validation-126,No slippage applied to `gammaTradeMarket.quoteTrade()`,Impact description is too vague and generic,MAX_ACCEPTABLE_SQRT_PRICE_RANGE is in place,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/lens/GammaTradeMarketQuoter.sol#L20-L28,https://github.com/code-423n4/2024-05-predy/blob/main/src/lens/GammaTradeMarketQuoter.sol#L20-L28,https://github.com/code-423n4/2024-05-predy/blob/main/src/lens/GammaTradeMarketQuoter.sol#L20-L28,,,,,
Unsatisfactory,validation-128,Swaps via the `UniswapSettlement` for some supported tokens can be permanently bricked by a malicious actor,Bot Finding. L-1,L-1 from Analyzer,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,,,,,
Unsatisfactory,validation-13,Reentrancy :     /src/markets/perp/PerpMarketV1.sol,Invalid,Devoid of actual scenario given,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L159-L218,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L159-L218,,,,,
Unsatisfactory,validation-131,Protocol would encounter DOS in multiple core functions due to the strict Access Control on `predyPool.take()`,Invalid. It is set in initializeLock,Inadequate proof on an intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L127-L130,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L127-L130,,,,,
Unsatisfactory,validation-133,The Gamma Market's trading mechanism is not of the industry standard and is implemented incorrectly cause it hardcodes the maximum acceptable slippage value for all assets even if the volatility/market movement of all integrated assets are way different.,Invalid,Low QA/Informational,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/SlippageLib.sol#L12-L14,"https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L203-L208,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/SlippageLib.sol#L12-L55","https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/SlippageLib.sol#L12-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L203-L208",,,,,
Unsatisfactory,validation-144,The price calculation from the Pyth price is wrong,Invalid. decimalDiff takes care of the scaling,Lacking concrete example to elicit the flaw,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,,,,,
Unsatisfactory,validation-146,Vault Will Remain As No One Will Be Willing To Liquidate,Invalid,Intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,,,,,
Unsatisfactory,validation-147," Reentrancy in mint Function.The mint function is vulnerable to reentrancy attacks due to the external call to IUniswapV3MintCallback(msg.sender).uniswapV3MintCallback(amount0, amount1, data); before state updates.",Invalid,Devoid of actual scenario given,,,https://github.com/code-423n4/2024-05-predy/blob/main/lib%2Fv3-core%2Fcontracts%2FUniswapV3Pool.sol#L464-L493,,https://github.com/code-423n4/2024-05-predy/blob/main/lib%2Fv3-core%2Fcontracts%2FUniswapV3Pool.sol#L464-L493,,,,,
Unsatisfactory,validation-148,"Integer Underflow in collect Function: The collect function uses unchecked subtraction, which can lead to integer underflow if position.tokensOwed0 or position.tokensOwed1 is less than the amounts being subtracted.",Invalid,Insufficient proof. Impossible to underflow,,,https://github.com/code-423n4/2024-05-predy/blob/main/lib%2Fv3-core%2Fcontracts%2FUniswapV3Pool.sol#L495-L521,,https://github.com/code-423n4/2024-05-predy/blob/main/lib%2Fv3-core%2Fcontracts%2FUniswapV3Pool.sol#L495-L521,,,,,
Unsatisfactory,validation-15,incorrect-equality : 6 occurences,Invalid,Insufficient proof,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L375-L386,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L375-L386,,,,,
Unsatisfactory,validation-152,"Solmate's `safeTransfer` and `safeTransferFrom` does not check the code size of the token address, which may lead to funding loss",Lack of evidence.,Low QA frequently reported by the bots,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L32,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L32,,,,,
Unsatisfactory,validation-16,Uninitialized Local values :  9 Occurrences,Invalid,Incorrect assumptions,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L90,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L90,,,,,
Unsatisfactory,validation-167,Don't verify if a pair is enabled leading to use trade even if a pair isn't enabled.,Invalid,Low QA on refactoring input validation,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L272,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L272,,,,,
Unsatisfactory,validation-169,validateRiskParams doesn't check boundary of min and max slippage,Invalid,Low QA on boundary checks,minimal loss,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L213-L217,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L213-L217,,,,,
Unsatisfactory,validation-17,Loss of precision and error when trying to convert decimal values.,Invalid,No division is entailed,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89-L99,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89-L99,,,,,
Unsatisfactory,validation-172,swapExactIn(...) and swapExactOut(...) functions cannot swap ETH,Invalid,Use WETH then,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L36,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L36",,,,,
Unsatisfactory,validation-173,First Depositor Exploitation,Invalid,This isn't 4626 vulnerable,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222-L228,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222-L228,,,,,
Unsatisfactory,validation-174,Lack of Input Validation on createPriceFeed in PriceFeedFactory Contract,Invalid,Pool owner is trusted per readme. Low QA at best on owner input validation,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L9-L25,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L9-L25,,,,,
Unsatisfactory,validation-176,Missing Nonce in Hash Calculation,Invalid,Insufficient proof eliciting the flaws,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaOrder.sol#L43,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaOrder.sol#L43,,,,,
Unsatisfactory,validation-178,`createPriceFeed` is suspicious of reorg attacks,Invalid,Low QA frequently reported by the bots,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18,,,,,
Unsatisfactory,validation-181,Unexpected reverts due to incorrect usage of staticcall,Invalid,Informational,recipient,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L60,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L60,,,,,
Unsatisfactory,validation-182,Unsafe Casting from uint256 to uint32 in `callUniswapObserve` Function,Invalid,Informational,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L35,,,,,
Unsatisfactory,validation-183,Implementing Rebalance Logic in Withdraw Function,Invalid,Informational,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L237,,,,,
Unsatisfactory,validation-184,Users can lose a portion of their trade funds if some of their funds haven't been added to the underlying Uniswap pools.,Invalid,Intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L265,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L265,,,,,
Unsatisfactory,validation-202,Malicious price oracle injection,Invalid,Pool owner is trusted per readme. This is merely a library function,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L141-L143,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L141-L143,,,,,
Unsatisfactory,validation-209,Anyone can call the initilizeGlobalData function and change the address of the UniswapFactory,Invalid,L-6 from Analyzer (circumvented typically via deploy script),,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L44,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L44,,,,,
Unsatisfactory,validation-21,"Don't check the zero address, leading to security risks.",Invalid,Low QA,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarket.sol#L84-L86,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarket.sol#L84-L86,,,,,
Unsatisfactory,validation-211,Assembly revert only be caught for those functions with returns declaration,Invalid,No assembly is entailed,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L370-L372,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L370-L378,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L370-L378,,,,,
Unsatisfactory,validation-216,An attacker can front-run closing position orders to steal users' fund,Invalid,Impractical exploit,"rounding direction, no detailed impact",,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L149-L157,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L149-L157,,,,,
Unsatisfactory,validation-233,Unexpected protocol behavior because some tokens have implementations only on part of the target chains,Invalid,Informational,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L28,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L28,,,,,
Unsatisfactory,validation-24,Uses timestamps for comparisons allowing miners to manipulate the comparisons.,Invalid,Infeasibel in POS,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L32,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L32,,,,,
Unsatisfactory,validation-243,The method used to calculate the minimum value is incorrect,Invalid,Inadequate proof and elaboration (lacking concrete POC),,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L186-L223,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L193-L194,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L186-L223,,,,,
Unsatisfactory,validation-25,"Using another variable instead of msg.sender in the transferFrom function, an attacker can pretend to be someone else and transfer tokens in someone else's place.",Invalid,Insufficient proof,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L48-L50,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L48-L50,,,,,
Unsatisfactory,validation-255,New Operator Should be Set in a Two-Step Process,SC rule,Low QA frequently reported by the bots,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L97-L102,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L97-L102,,,,,
Unsatisfactory,validation-263,Attackers can revert the trade function by transferring the token directly to the predypool.,Invalid,Unstructured proof and elaboration,not used when create the pair or vault,,https://github.com/code-423n4/2024-05-predy/blob/main/src/types/GlobalData.sol#L103,,https://github.com/code-423n4/2024-05-predy/blob/main/src/types/GlobalData.sol#L103,,,,,
Unsatisfactory,validation-264,DOS on liquidation when totalNormalBorrowed is equal to ( totalCompoundDeposited+totalNormalDeposited) for a  token in predypool.,Invalid. To take out all the funds in the pool you require collateral,Inadequate proof to substantiate the described scenario,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L511,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L66-L68,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L66-L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L511",,,,,
Unsatisfactory,validation-265,Lenders may not get rewards for supplying tokens in predypool.,Invalid. GPT,Inadequate proof to substantiate the described scenario,it is used only one time,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L190,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L190,,,,,
Unsatisfactory,validation-266,Inefficient Liquidity Allocation Due to Symmetric Tick Range Assumption in Uniswap V3 Pools,GPT,Known issue per readme pertaning to small Uniswap liquidity,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L177-L179,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L177-L179,,,,,
Unsatisfactory,validation-267,calculateUsableTick calculation is not done properly .,Report is not clear on root cause or impact,Insufficient proof,"2 different thing, fee and interest",,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L109,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L109,,,,,
Unsatisfactory,validation-270,The `liquidate()` function checks for prices after applying interest rates and updating rebalances,Report is too vague and not clear,Intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,,,,,
Unsatisfactory,validation-272,single-step ownership transfer pattern is dangerous as the filler is the owner,,Low QA frequently reported by the bots,malicious pair,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L31-L34,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L31-L34,,,,,
Unsatisfactory,validation-276,Lenders Can Withdraw Before Profit Realization,No issue describe. Only analysis of a potential suboptimal design,Incorrect assumptions,no detailed impact,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L226,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L226,,,,,
Unsatisfactory,validation-278,Lack of Reserve Implementation Prevents Withdrawals,No issue describe. Only analysis of a potential suboptimal design,Incorrect assumptions and informational at best,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L226,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L226,,,,,
Unsatisfactory,validation-279,Liquidation Burden on Liquidators,No issue describe. Only analysis of a potential suboptimal design,Intended design,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L99,,,,,
Unsatisfactory,validation-282,Counting Unearned Yield When Valuing Collateral Leads to Undercollateralized Pools,Invalid,Intended design,max is 18446744073709500000,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L218,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L218,,,,,
Unsatisfactory,validation-288,tokens that dont allow zero transfers will halt pool,There is a list of tokens in scope,Low QA frequently reported by the bots,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L123,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L123,,,,,
Unsatisfactory,validation-293,Wrong calculation of `upperPrice` and `lowerPrice` in `PositionCalculator::calculateMinValue`,Invalid,Inadequate proof and elaboration,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L193-L194,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PositionCalculator.sol#L193-L194,,,,,
Unsatisfactory,validation-297,Divide before multiply,Low quality report,Low QA devoid of concrete example,scalar factor diff,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L120,,,,,
Unsatisfactory,validation-301,Arbitrary `from` passed to `transferFrom` (or `safeTransferFrom`),Invalid,Insufficient proof,0 amt transfer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L48,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L48,,,,,
Unsatisfactory,validation-302,Unprotected initializer,Invalid,L-6 from Analyzer,approve 0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L44,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L44,,,,,
Unsatisfactory,validation-306,Decimal Difference Handling Requires int Type for `_decimalsDiff`,Invalid,Incorrect assumptions,approve 0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L32,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L32,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L55","https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L32,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L55",,,,,
Unsatisfactory,validation-307,Validation Check for `rangeSize` is wrong.,GPT,Low QA on validation check,diff decimal,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L216,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L213-L217,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L213-L217,,,,,
Unsatisfactory,validation-309,anyone can change the global data uniswapfactory contracts,Invalid,L-6 from Analyzer,duplicate pair,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L44,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L44,,,,,
Unsatisfactory,validation-310,Not considering the decimal differences when calculating the sqrtPrice in `convertSqrtPrice` Function,Invalid. Evidence in the report does not make sense with the text.,Not applicable to Uniswap,frontrun init,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L27-L33,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L27-L33,,,,,
Unsatisfactory,validation-316,An attacker can lock all `quoteToken` of a pair by exploiting `PredyPool`'s callbacks,Invalid,Impractical exploit,liq slippage no poc how sandwich is possible,,https://github.com/code-423n4/2024-05-predy/blob/main/src/types/GlobalData.sol#L46,,https://github.com/code-423n4/2024-05-predy/blob/main/src/types/GlobalData.sol#L46,,,,,
Unsatisfactory,validation-317,Inflation attack in PredyPool,Invalid. Lack of evidence,This isn't 4626 vulnerable,"negative fee no loss, seems QA",,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222-L228,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222-L228,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222-L228,,,,,
Unsatisfactory,validation-319,H-1: Unprotected initialize,Invalid,L-6 from Analyzer,precision,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L44,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L44,,,,,
Unsatisfactory,validation-321,"The onlyByLocker modifier is used to restrict access to certain functions, but it's not properly protected. An attacker can manipulate the globalData.lockData.locker variable to gain unauthorized access.",,Insufficient proof,precision,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L52,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L52,,,,,
Unsatisfactory,validation-322,"The uniswapV3MintCallback function is vulnerable to reentrancy attacks. An attacker can exploit this by creating a contract that calls uniswapV3MintCallback repeatedly, draining the contract's funds.",Invalid,Insufficient proof,precision,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L78,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L78,,,,,
Unsatisfactory,validation-323,"The getSqrtPrice function does not implement any reentrancy protection mechanisms. If an external function called from getSqrtPrice modifies the state of the contract, it could lead to unexpected behavior and potentially allow for funds to be drained",,Insufficient proof,precision,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45,,,,,
Unsatisfactory,validation-334,"test 2 bitcoin,pls fovgive me",,Empty report,precision,,,,,,,,,
Unsatisfactory,validation-338,"Zero nonce management within the order validation process, which might make the contracts susceptible to replay attacks.",There is a nonce in the OrderInfoLib library,Insufficient proof eliciting the flaws,sig replay,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpOrderV3.sol#L1-L81,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpOrderV3.sol#L1-L81,,,,,
Unsatisfactory,validation-349,Users could supply assets but receive no bond token in return,Invalid,Inadequate proof devoid of a concrete and exploitable example,712 type,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222,,,,,
Unsatisfactory,validation-350,Issue with Direct Transfers to `msg.sender` for Blacklisted Addresses,Invalid,Low QA frequently reported by the bots,arbitrum weth self transferFrom,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L199,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L199,,,,,
Unsatisfactory,validation-351,`updatePriceOracle` Function could be exploited,Invalid,Pool owner is trusted per readme,assembly revert,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L167,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L167,,,,,
Unsatisfactory,validation-352,Relying solely on oracle base slippage parameters can cause significant loss,Invalid,Readme: Non-atomic sandwich price manipulation,"bps formula this report might not be quite right, bps formula is ok. 
 But `decay2()` ussage with bps seems wrong, need to double check. perpMarketLib.sol#validateStopPrice()",,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L313,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L313,,,,,
Unsatisfactory,validation-358,Update Fee Flow,Invalid,Missing accrued fee calculation prior to fee update,decimalsDiff negative,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L373,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L373,,,,,
Unsatisfactory,validation-359,Potential Off-by-One Error in Time Comparison Using >= with block.timestamp,Invalid,Inconsequential 1 sec change,dust fee,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L54,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L54,,,,,
Unsatisfactory,validation-363,No incentive to liquidate unsafe vaults,Invalid,Intended design,erc20 pause/blacklist,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L313,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L313",,,,,
Unsatisfactory,validation-365,Mismatched Decimals in Price Calculation,Invalid. Computation includes a decimalDiff variable. Report does not give more evidence of an issue with this variable.,Taken care of by _decimalsDiff,erc20 pause/blacklist,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54,,,,,
Unsatisfactory,validation-376,Conflicting Initialization Mechanisms in PredyPool.sol Contrac,GPT,L-6 from Analyzer,erc20 pause/blacklist,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68-L75,,,,,
Unsatisfactory,validation-377,Assets can remain stuck forever inside the protocol,Invalid,Low QA frequently reported by the bots,erc20 pause/blacklist,,https://github.com/code-423n4/2024-05-predy/blob/main/src%5CPredyPool.sol#L177-L191,,https://github.com/code-423n4/2024-05-predy/blob/main/src%5CPredyPool.sol#L177-L191,,,,,
Unsatisfactory,validation-384,High 01 Wrong BPS Calculation,Invalid,Insufficient burden of proof (lacking concrete POC),erc20 pause/blacklist,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/math/Bps.sol#L7-L13,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/math/Bps.sol#L7-L13,,,,,
Unsatisfactory,validation-385,High 02 Non Working Price-Based Auction,Invalid,Insufficient proof,filler or owner,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L147-L153,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketLib.sol#L147-L153,,,,,
Unsatisfactory,validation-386,Mid 01 Improper Address Validation,Impact is too vague and generic. Address(0) validation,Inadequate proof to substantiate the described scenario,filler or owner,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L33-L37,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L33-L37,,,,,
Unsatisfactory,validation-388,Mid 03 No IsContract Check On Safe Transfers,Invalid,Low QA frequently reported by the bot,"liq incentive market volatility, remainingMargin < 0",,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L7,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L7,,,,,
Unsatisfactory,validation-389,Mid 04 Underflow Due To Unchecked Block,Invalid,Impossible to underflow,low liquidity liquidation relate to finding #19,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L113-L146,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/UniHelper.sol#L113-L146,,,,,
Unsatisfactory,validation-390,Mid 05 Potential Of PreddyPool Drainage,Invalid,Insufficient proof,low liquidity liquidation,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L321-L331,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L321-L331,,,,,
Unsatisfactory,validation-391,Address Validation Issue in validate Function,Impact is too vague and generic. Address(0) validation,Inadequate proof to substantiate the described scenario,negative tick,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L34,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L34,,,,,
Unsatisfactory,validation-401,"In `GammaTradeMarket`, if a user `executeTrade` with an old `positionId` that is either closed or liquidated through `GammaTradeMarket`, then he can not close that position",Invalid,Intended design,negative tick,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L197-L201,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L197-L201,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L197-L201,,,,,
Unsatisfactory,validation-404,InterestRateModel.calculateInterestRate is wrongly implemented as per the docs.,Invalid. Semantically equivalent,Inconsequential trivial refactoring,negative tick,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/InterestRateModel.sol#L25-L30,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/InterestRateModel.sol#L25-L30,,,,,
Unsatisfactory,validation-405,Corruptible Upgradeability Pattern,Speculation of future code,L-12 from Analyzer,negative tick,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L24,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarket.sol#L24,,,,,
Unsatisfactory,validation-407,Unspecified Precision of Prices in getSqrtPrice Function,Invalid,Lacking concrete example to elicit the flaw,negative tick,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L54-L55,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L45-L58,,,,,
Unsatisfactory,validation-412,Liquidation Logic Can Make Traders's Position Become Unfavorable for Liquidation,Lack of evidence,Intended design,O(N) remove,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L101,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L101-L106,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L101-L106,,,,,
Unsatisfactory,validation-414,Missing `amountOut` Transfer to swapper in `UniswapSettlement::swapExactIn` Function,Invalid,Insufficient proof and elaboration,O(N) remove,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22,,,,,
Unsatisfactory,validation-415,Solmate's SafeTransferLib does not check for token contract's existence,Lack of evidence.,Low QA frequently reported by the bots,O(N) remove this one might be partial,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L7,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L7,,,,,
Unsatisfactory,validation-416,Potential Underflow in `Reallocation::calculateAmount1ForLiquidity` Function,Invalid,Informational,O(N) remove,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L165,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L165,,,,,
Unsatisfactory,validation-419,Unsafe downcasts can lead to errors,Low quality,Low QA frequently reported by the bots (will revert after all and inconsequential in the absence of unchecked safe math),oracle Arbitrum 60s already stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L190,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Reallocation.sol#L190,,,,,
Unsatisfactory,validation-42,Unused Return Variable Declarations in `PredyPool.sol` Functions,Invalid,They are not needed in the context,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222-L225,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L222-L225,,,,,
Unsatisfactory,validation-424,Loss of funds to the protocol,Invalid,amount has been cached,oracle minAnswer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L184,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L184,,,,,
Unsatisfactory,validation-425,Loss of creator funds to the smart contract,Invalid,amount has been cached,oracle minAnswer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L206,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L206,,,,,
Unsatisfactory,validation-426,Price Oracle Address is Not Verified Users Can Easily Manipulate Prices,Invalid,Pool owner is trusted per readme,oracle minAnswer,,https://github.com/code-423n4/predyx/blob/main/src/PredyPool.sol#L109,,https://github.com/code-423n4/predyx/blob/main/src/PredyPool.sol#L109,,,,,
Unsatisfactory,validation-43,Use of `approve` in `UniswapSettlement.sol` Can Cause Issues with Non-Standard Tokens Like USDT,Bot Finding. L-1,L-1 from Analyzer,no loss,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L31,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,"https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L31",,,,,
Unsatisfactory,validation-431,All tokens available on Uniswap can be added to PredyPool without any limitations,Invalid,Low QA/Informational (No loss of funds entailed),oracle minAnswer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L109-L111,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L109-L111,,,,,
Unsatisfactory,validation-44,Potential Re-Org Attack Vulnerability in `createPriceFeed` Function in `PriceFeed.sol`,Invalid,Low QA frequently reported by the bots,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L19,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L19,,,,,
Unsatisfactory,validation-445,Perp::updateFeeAndPremiumGrowth might cause potential DoS,Invalid,Overflow impossible,oracle minAnswer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L398-L400,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L398-L400,,,,,
Unsatisfactory,validation-446,Orders might be left unexecuted,Invalid,Filler should be trusted,oracle minAnswer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L149,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L149,,,,,
Unsatisfactory,validation-447,Liquidators have no incentive to remove positions,Invalid,Intended design,oracle pyth,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,,,,,
Unsatisfactory,validation-448,PredyPool::trade() does not have access modifier,Invalid,Lacking concrete example to elicit the flaw,oracle pyth,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L265,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L265,,,,,
Unsatisfactory,validation-450,`PredyPool::trade()` if statement is using the wrong address,Invalid,Lacking concrete example to elicit the flaw,oracle sequencer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L265,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L265-L279,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L265-L279,,,,,
Unsatisfactory,validation-452,Protocol does not support partial liquidations,Invalid. Low quality,Intended design,oracle sequencer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,,,,,
Unsatisfactory,validation-454,SupplyToken is not EIP20 compliant,Invalid,Use parental super.xxx() then,oracle sequencer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/tokenization/SupplyToken.sol#L4,,https://github.com/code-423n4/2024-05-predy/blob/main/src/tokenization/SupplyToken.sol#L4,,,,,
Unsatisfactory,validation-455,`SpotMarket.sol` gives ERC20 token allowances to `settlementParams.contractAddress` but doesn't remove allowances when `settlementParams.contractAddress` is updated,Invalid,Informational,oracle sequencer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/spot/SpotMarket.sol#L266,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/spot/SpotMarket.sol#L266,,,,,
Unsatisfactory,validation-46,Allowance was not set to zero first before changing the allowance.,Bot finding. L-1,L-1 from Analyzer,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L46-L55,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L46-L55,,,,,
Unsatisfactory,validation-461,The Use of address entryTokenAddress instead of address(this) can be exploited for replay attacks if not managed correctly,Invalid,Infeasible mitigation,oracle sequencer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpOrder.sol#L31,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpOrder.sol#L31,,,,,
Unsatisfactory,validation-470,Pair creator can deploy malicious price feeds to alter price and liquidate healthy positions.,Invalid,Low QA on timelock implementation,oracle sequencer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18-L25,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18-L25,,,,,
Unsatisfactory,validation-476,Traders can lock all liquidity in a pool.,Invalid,Insufficient proof,oracle sequencer,,https://github.com/code-423n4/2024-05-predy/blob/main/src/types/GlobalData.sol#L53,,https://github.com/code-423n4/2024-05-predy/blob/main/src/types/GlobalData.sol#L53,,,,,
Unsatisfactory,validation-478,No incentive for a liquidator to liquidate an unsafe vault,Report is not clear,Intended design,oracle sequencer grace period,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L109,,,,,
Unsatisfactory,validation-482,`UniswapSettlement:swapExactOut` will fail for tokens like USDT that has approval race protection,Bot Finding. L-1,L-1 from Analyzer,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L47,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,,,,,
Unsatisfactory,validation-5,Precision Loss in `PremiumCurveModel::calculatePremiumCurve` Below 0.125 Utilization Rate,Invalid,Protocol in disadvantage,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PremiumCurveModel.sol#L21,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/PremiumCurveModel.sol#L21,,,,,
Unsatisfactory,validation-506,There is no slippage control in `modifyAutoHedgeAndClose` method,Invalid,Readme: Front-running via insufficient slippage specification is out of scope,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketL2.sol#L89,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketL2.sol#L89,,,,,
Unsatisfactory,validation-515,Default return value lead to out-of-bounds array access.,Invalid,Incorrect assumptions,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L9-L28,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/ArrayLib.sol#L9-L28,,,,,
Unsatisfactory,validation-516,"In gamma trading, the `PredyPool` became insolvent when the sell-side was more than the buy-side",Invalid,Intended design,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L723-L725,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L723-L725,,,,,
Unsatisfactory,validation-527,Reentrancy Vulnerability in uniswapV3MintCallback Function and in LiquidationLogic,GPT,Devoid of actual scenario given,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L78-L90,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L78-L90,,,,,
Unsatisfactory,validation-531,"A large number of pairs are maliciously added, which will cause the pair to reach the upper limit and cannot be added.",Invalid,Informational,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L109,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L109,,,,,
Unsatisfactory,validation-533,Insecure Signature Verification in resolve() Function,GPT,Insufficient proof,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpOrderV3.sol#L78-L81,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpOrderV3.sol#L78-L81,,,,,
Unsatisfactory,validation-54,Initialization and Implementation Risks in Upgradeable BaseHookCallback,Invalid,L-6 from Analyzer,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseHookCallbackUpgradable.sol#L1,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseHookCallbackUpgradable.sol#L1,,,,,
Unsatisfactory,validation-540,Unchecked Signature Validation in PerpOrderV3Lib.resolve poses risk of Unauthorized Actions(Systemic risk),GPT,Low QA on signature validation. Will fail regardless in the POC scenario described,oracle stale,,https://github.com/code-423n4/predyx/blob/main/src/markets/perp/PerpMarket.sol#L27-L54,,https://github.com/code-423n4/predyx/blob/main/src/markets/perp/PerpMarket.sol#L27-L54,,,,,
Unsatisfactory,validation-542,Initialization of contracts like `PredyPool.sol` can be frontrunned.,Low quality,L-6 from Analyzer,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L68,,,,,
Unsatisfactory,validation-544,`withdrawProcolRevenue` and `withdrawCreatorRevenue` dont check what coin is accumulated as revenue.,Invalid,Infeasible. It's pool specific,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L199,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L199,,,,,
Unsatisfactory,validation-546,In `PredyPool.sol` the function `take` is unreachable.,Invalid. It is set in initializeLock,Insufficient proof,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L329,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L329,,,,,
Unsatisfactory,validation-557,Vulnerability in Interest Rate Calculation Allowing Potential Exploit in ReaderLogic Functions,Invalid,Admins are trusted,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L50,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L50,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ReaderLogic.sol#L16-L41","https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L50,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ReaderLogic.sol#L16-L41",,,,,
Unsatisfactory,validation-558,Approval Race Condition in UniswapSettlement Contract can lead to funds get stuck,GPT,Low QA frequently reported by the bots,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L36,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L36,,,,,
Unsatisfactory,validation-559,"No storage gap for upgradeable market contracts, potentially leading to storage collision.",Speculation of future code,L-12 from Analyzer,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L30,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/BaseMarketUpgradable.sol#L30,,,,,
Unsatisfactory,validation-561,A malicious pair owner could set unfavorable configs to users,Invalid,Low QA on timelock implementation,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L133-L139,,,,,
Unsatisfactory,validation-563,"If a lender got blacklisted by asset contract, their collateral funds can be permanently frozen with the pool",Invalid,User's mistake isn't the protocol's responsibility,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L90,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,"https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L93-L100,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/SupplyLogic.sol#L90",,,,,
Unsatisfactory,validation-565,Malicious user can make profits by falsifying the priceFeed of a token pair.,Invalid,Pool owner is trusted per readme,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L20-L26,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18-L24,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L29-L58","https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L18-L26,https://github.com/code-423n4/2024-05-predy/blob/main/src/PriceFeed.sol#L29-L58",,,,,
Unsatisfactory,validation-567,Missing Validation for Interest Rate Model Parameters in _storePairStatus Function,Invalid,Pool owner is trusted,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L142,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L142,,,,,
Unsatisfactory,validation-570,"Utilization rate is inadvertently applied one more time on the interest rate, stunting `assetGrowth` accrual",Invalid,Incorrect assumption,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L202,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ScaledAsset.sol#L202,,,,,
Unsatisfactory,validation-572,Unrestricted External Access to Library Functions in AddPairLogic Allows Unauthorized Parameter Manipulation,Invalid,Pool owner is trusted per readme. This is merely a library function,oracle stale,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L96,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L96,,,,,
Unsatisfactory,validation-573,Double accounting for `sqrtRebalanceEntryUpdateStable` and `sqrtRebalanceEntryUpdateUnderlying`,Invalid,Incorrect assumptions and insufficient proof,partial liquidation,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L513,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L513,,,,,
Unsatisfactory,validation-579,[H-01] Uncontrolled Access in initialize() function leads to Frontrunning Attack and Admin Takeover in `PredyPool.sol`,Invalid,L-6 from Analyzer,partial liquidation,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L70,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L70,,,,,
Unsatisfactory,validation-588,Bps.sol : The lower and upper logic is incorrect which would lead to serious calculation error during the trade,Invalid,Insufficient burden of proof (lacking concrete POC),range size range size could change if rangeSize % tickSpacing != 0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/math/Bps.sol#L5-L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/math/Bps.sol#L5-L13,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/math/Bps.sol#L5-L13,,,,,
Unsatisfactory,validation-593,"The missing IRM parameters check in the `registerPair()` function allows for the instant draining of all funds from all pairs, as the creator's revenue is accounted for before the debt is paid out.",Invalid. Role is trusted,Impractical exploit,skip allowlist msg.sender is the market contract,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L150-L153,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L150-L153,,,,,
Unsatisfactory,validation-594,Registration of a pair with malicious price feed can lead to extraction of funds from other pairs.,Invalid. Role is trusted,Impractical exploit,slippage hardcode DOS,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L71-L72,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/ApplyInterestLib.sol#L71-L72,,,,,
Unsatisfactory,validation-600,"Missing Blacklist Validation in `withdrawCreatorRevenue`, `withdrawProtocolRevenue` and `uniswapV3MintCallback` functions","Low quality, lack of evidence",Low QA frequently reported by the bots,slot0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L78-L90,"https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L78-L90,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L177-L191,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L199-L213","https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L78-L90,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L177-L191,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L199-L213",,,,,
Unsatisfactory,validation-601,"As anybody can create pools, malicious pool owners can prevent existing traders from trading, making them prone to liquidations.","Invalid. Role is trusted. No evidence that this breaks protocol trusted assumptions, damage is only to tha vault.",Pool owner is trusted,slot0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L109,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L109,,,,,
Unsatisfactory,validation-603,Inability to Disable allowedUniswapPools Once Enabled,Role is trusted to not add malicious addresses,It's an admin controlled call,slot0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L109-L111,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L109-L111,,,,,
Unsatisfactory,validation-609,Valid Pairs Incorrectly Marked as Invalid,Low quality,Inadequate proof and elaboration,slot0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/RebalancingLibrary.sol#L26-L42,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/RebalancingLibrary.sol#L26-L42,,,,,
Unsatisfactory,validation-612,Reversion in _executeOrderV3 Due to Uninitialized Quote Token Mappings in _validateQuoteTokenAddress Function,Invalid,Low QA on uninitialized variable,slot0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L167,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpMarketV1.sol#L167,,,,,
Unsatisfactory,validation-615,Missing access control in external `AddPairLogic::updatePriceOracle` function,Invalid,Pool owner is trusted per readme. This is merely a library function,slot0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L112,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L112,,,,,
Unsatisfactory,validation-617,approve()/safeApprove() may revert if the current approval is not zero,Bot finding. L-1,L-1 from Analyzer,slot0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L31,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L31,,,,,
Unsatisfactory,validation-619,Unrestricted Initialization Function Allows Reinitialization by Any User,Invalid,L-6 from Analyzer,slot0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L44-L48,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/AddPairLogic.sol#L44-L48,,,,,
Unsatisfactory,validation-624,Malicious User Can DOS The PredyPool,Invalid,Insufficient proof,slot0,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/VaultLib.sol#L42,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/VaultLib.sol#L42,,,,,
Unsatisfactory,validation-628,Potential underflow in `calculateSlippageTolerance` function,Invalid,Low QA frequently reported by the bots,storage collision,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L159-L175,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L159-L175,,,,,
Unsatisfactory,validation-634,Lack of Access Control in Liquidation Function,GPT,Incorrect assumptions,swap deadline,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L119,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L39-L119,,,,,
Unsatisfactory,validation-635,DoS attack: Inefficient input validation of '_amount' in SupplyLogic.supply() may be leveraged to clog the Network.,GPT,Informational,swap deadline,,https://github.com/code-423n4/predyx/blob/main/src/libraries/logic/SupplyLogic.sol#L22-L44,,https://github.com/code-423n4/predyx/blob/main/src/libraries/logic/SupplyLogic.sol#L22-L44,,,,,
Unsatisfactory,validation-636,`swapExactIn()` and `swapExactOut()` cannot swap if the input asset is ETH  without risking owner's funds.,Invalid,Use WETH then,swap deadline,,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L38-L56,https://github.com/code-423n4/2024-05-predy/blob/main/src/settlements/UniswapSettlement.sol#L22-L56,,,,,
Unsatisfactory,validation-638,Liquidation: `execLiquidationCall` can be reverted when refunding the excess amount to the trader/recepient.,The transfer is not native tokens,Vault owner should be trusted,swap deadline,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89-L108,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/logic/LiquidationLogic.sol#L89-L108,,,,,
Unsatisfactory,validation-654,Incorrect Handling of safeTransferFrom for WETH on Non-WETH9 Chains Causes Settlement Failures,There is no evidence in the report that filler == address(this),Incorrect assumptions with an infeasible fix,uninitialized Impl,,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L48,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L48-L50,https://github.com/code-423n4/2024-05-predy/blob/main/src/base/SettlementCallbackLib.sol#L48-L50,,,,,
Unsatisfactory,validation-655,Type mismatch in the the eip-712 order hash function of PerpOrderV3.sol,Strings are encoded using the keccak256,That's a working and supposed cast,uninitialized Impl,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpOrderV3.sol#L9-L76,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpOrderV3.sol#L9-L76,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/perp/PerpOrderV3.sol#L9-L76,,,,,
Unsatisfactory,validation-659,The protocol revenue can be drained,Invalid,Operators are trusted per readme,uninitialized Impl,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L187,,https://github.com/code-423n4/2024-05-predy/blob/main/src/PredyPool.sol#L187,,,,,
Unsatisfactory,validation-673,The settlement address is not validated,Invalid,Inadequate proof to substantiate the described scenario,validatestopprice 0 Tolerance,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/spot/SpotMarket.sol#L268,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/spot/SpotMarket.sol#L268,,,,,
Unsatisfactory,validation-681,Attacker can update two different prices to Pyth oracle to exploit the `executeTrade(...)` function of GammaTradeMarketWrapper.sol,While the report may discribe a valid concern. It lacks understanding of the root cause and its simply a copy-paste.,Insufficient proof,validatestopprice only 1 direction,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketWrapper.sol#L11-L17,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketWrapper.sol#L11-L17,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaTradeMarketWrapper.sol#L11-L17,,,,,
Unsatisfactory,validation-684,Incorrect calculation of Amount Token 0,"Report seems to talk about an inconsistency in code and docs. However, neither impact nor root cause is well explained.",Insufficient proof,validatestopprice ratio,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L768,,https://github.com/code-423n4/2024-05-predy/blob/main/src/libraries/Perp.sol#L768,,,,,
Unsatisfactory,validation-84,M-1: Use of `abi.encodePacked` can lead to hash collision,GPT,Low QA frequently reported by the bots,,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaOrder.sol#L23-L37,,https://github.com/code-423n4/2024-05-predy/blob/main/src/markets/gamma/GammaOrder.sol#L23-L37,,,,,